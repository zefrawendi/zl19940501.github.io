<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>systemctl mask和systemctl disable的区别</title>
    <url>/2021/05/24/systemctl-mask%E5%92%8Csystemctl-disable%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p>systemctl mask和systemctl disable的区别一般很难注意到，因为大部分时候只会使用systemctl disable，并不会用到systemctl mask。<br>总体来看，<br>disable和enable是一对操作，是用来启动、停止服务。<br>mask和unmask是一对操作，用来屏蔽和取消屏蔽服务。</p>
<span id="more"></span>
<h2 id="systemctl-disable"><a href="#systemctl-disable" class="headerlink" title="systemctl disable"></a>systemctl disable</h2><p>在系统中安装了某个服务以后，需要将该服务设置为开机自启，那么一般会执行systemctl enable xxx，这个时候会发现shell中会输出两行提示，一般类似如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl enable NetworkManager </span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>multi<span class="operator">-</span>user.target.wants<span class="operator">/</span>NetworkManager.service <span class="keyword">to</span> <span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager.service.</span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>dbus<span class="operator">-</span>org.freedesktop.nm<span class="operator">-</span>dispatcher.service <span class="keyword">to</span> <span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager<span class="operator">-</span>dispatcher.service.</span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>network<span class="operator">-</span>online.target.wants<span class="operator">/</span>NetworkManager<span class="operator">-</span>wait<span class="operator">-</span>online.service <span class="keyword">to</span> <span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager<span class="operator">-</span>wait<span class="operator">-</span>online.service.</span><br></pre></td></tr></table></figure>

<p>这个命令会在/etc/systemd/system/目录下创建需要的符号链接，表示服务需要进行启动。通过stdout输出的信息可以看到，软连接实际指向的文件为/usr/lib/systemd/system/目录中的文件，实际起作用的也是这个目录中的文件。</p>
<p>执行systemctl disable xxx后，会禁用这个服务。它实现的方法是将服务对应的软连接从/etc/systemd/system中删除。命令执行情况一般类似如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl disable NetworkManager</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>multi<span class="operator">-</span>user.target.wants<span class="operator">/</span>NetworkManager.service.</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>dbus<span class="operator">-</span>org.freedesktop.NetworkManager.service.</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>dbus<span class="operator">-</span>org.freedesktop.nm<span class="operator">-</span>dispatcher.service.</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>network<span class="operator">-</span>online.target.wants<span class="operator">/</span>NetworkManager<span class="operator">-</span>wait<span class="operator">-</span>online.service.</span><br></pre></td></tr></table></figure>

<p>在执行systemctl disable xxx的时候，实际只是删除了软连接，并不会产生其他影响。</p>
<h2 id="systemctl-mask"><a href="#systemctl-mask" class="headerlink" title="systemctl mask"></a>systemctl mask</h2><p>执行 systemctl mask xxx会屏蔽这个服务。它和systemctl disable xxx的区别在于，前者只是删除了符号链接，后者会建立一个指向/dev/null的符号链接，这样，即使有其他服务要启动被mask的服务，仍然无法执行成功。执行该命令的效果一般类似如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl mask NetworkManager </span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager.service <span class="keyword">to</span> <span class="operator">/</span>dev<span class="operator">/</span>null.</span><br></pre></td></tr></table></figure>



<h2 id="两者的区别"><a href="#两者的区别" class="headerlink" title="两者的区别"></a>两者的区别</h2><p>在执行过mask后，如果想要启动服务，那么会报类似如下错误：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl <span class="keyword">start</span> NetworkManager</span><br><span class="line">Failed <span class="keyword">to</span> <span class="keyword">start</span> NetworkManager.service: Unit <span class="keyword">is</span> masked.</span><br></pre></td></tr></table></figure>

<p>此时要想重新启动服务，必须先执行unmask将服务取消屏蔽。如果前面使用的是disable的话，则可以正常启动服务。</p>
<p>总体来看，</p>
<p>disable和enable是一对操作，是用来启动、停止服务。<br>mask和unmask是一对操作，用来屏蔽和取消屏蔽服务。</p>
]]></content>
      <categories>
        <category>运维笔记</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenStack Ussuri版安装过程记录</title>
    <url>/2021/05/24/OpenStack%20Ussuri%E7%89%88%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>安装OpenStack Ussuri版<br><img src="https://cdn.jsdelivr.net/gh/zl19940501/image_repository/img/%E6%A9%99%E5%AD%90%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E5%A3%81%E7%BA%B8%20-%201.jpg"></p>
<span id="more"></span>

<hr>
<h2 id="1-基础环境"><a href="#1-基础环境" class="headerlink" title="1. 基础环境"></a>1. 基础环境</h2><p><strong>1.1 主机名&amp;ip</strong></p>
<table>
<thead>
<tr>
<th>IP地址</th>
<th>主机名</th>
<th>配置</th>
</tr>
</thead>
<tbody><tr>
<td>10.1.1.100</td>
<td>controller</td>
<td>2C4G</td>
</tr>
<tr>
<td>10.1.1.101</td>
<td>compute1</td>
<td>2C2G</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">配置主机IP（略）</span><br><span class="line">设置主机名</span><br><span class="line">hostnamectl <span class="keyword">set</span><span class="operator">-</span>hostname controller</span><br><span class="line">hostnamectl <span class="keyword">set</span><span class="operator">-</span>hostname compute1</span><br><span class="line">添加主机名与IP映射到hosts文件</span><br></pre></td></tr></table></figure>

<p><strong>1.2 ntp时间同步</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]#  yum install chrony <span class="operator">-</span>y</span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# vim <span class="operator">/</span>etc<span class="operator">/</span>chrony.conf </span><br><span class="line">allow <span class="number">10.1</span><span class="number">.1</span><span class="number">.0</span><span class="operator">/</span><span class="number">24</span></span><br><span class="line">server <span class="number">10.1</span><span class="number">.1</span><span class="number">.100</span> iburst</span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# systemctl restart chronyd.service </span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# systemctl enable chronyd.service </span><br></pre></td></tr></table></figure>

<p><strong>1.3 关闭防火墙 selinux</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">sed <span class="operator">-</span>i <span class="string">&#x27;/^SELINUX=.*/c SELINUX=disabled&#x27;</span> <span class="operator">/</span>etc<span class="operator">/</span>selinux<span class="operator">/</span>config</span><br><span class="line">sed <span class="operator">-</span>i <span class="string">&#x27;s/^SELINUXTYPE=.*/SELINUXTYPE=disabled/g&#x27;</span> <span class="operator">/</span>etc<span class="operator">/</span>selinux<span class="operator">/</span>config</span><br><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><strong>1.4 安装ussuri版yum源</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# yum install centos<span class="operator">-</span><span class="keyword">release</span><span class="operator">-</span>openstack<span class="operator">-</span>ussuri <span class="operator">-</span>y</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h2 id="2-安装客户端【controller节点】"><a href="#2-安装客户端【controller节点】" class="headerlink" title="2. 安装客户端【controller节点】"></a>2. 安装客户端【controller节点】</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# yum install python3<span class="operator">-</span>openstackclient <span class="operator">-</span>y</span><br></pre></td></tr></table></figure>

<h2 id="3-安装数据库【controller节点】"><a href="#3-安装数据库【controller节点】" class="headerlink" title="3. 安装数据库【controller节点】"></a>3. 安装数据库【controller节点】</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">yum install mariadb mariadb<span class="operator">-</span>server python2<span class="operator">-</span>PyMySQL <span class="operator">-</span>y</span><br><span class="line"> </span><br><span class="line">cat <span class="operator">&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>my.cnf.d<span class="operator">/</span>openstack.cnf <span class="operator">&lt;&lt;</span> EOF</span><br><span class="line">[mysqld]</span><br><span class="line">bind<span class="operator">-</span>address <span class="operator">=</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.100</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">default</span><span class="operator">-</span>storage<span class="operator">-</span>engine <span class="operator">=</span> innodb     #默认存储引擎</span><br><span class="line">innodb_file_per_table <span class="operator">=</span> <span class="keyword">on</span>          #每张表独立表空间文件</span><br><span class="line">max_connections <span class="operator">=</span> <span class="number">4096</span>              #最大连接数</span><br><span class="line"><span class="keyword">collation</span><span class="operator">-</span>server <span class="operator">=</span> utf8_general_ci   #默认字符集</span><br><span class="line"><span class="type">character</span><span class="operator">-</span><span class="keyword">set</span><span class="operator">-</span>server <span class="operator">=</span> utf8</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line">systemctl enable mariadb.service</span><br><span class="line">systemctl <span class="keyword">start</span> mariadb.service</span><br><span class="line"> </span><br><span class="line">mysql_secure_installation</span><br><span class="line">回车<span class="comment">---&gt;n---&gt;一路y</span></span><br></pre></td></tr></table></figure>

<h2 id="4-安装消息队列服务【controller节点】"><a href="#4-安装消息队列服务【controller节点】" class="headerlink" title="4. 安装消息队列服务【controller节点】"></a>4. 安装消息队列服务【controller节点】</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">centos8安装rabbitmq，需要手动设置一下yum源，ussuri源安装rabbitmq有点问题</span><br><span class="line"></span><br><span class="line">cat <span class="operator">&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>yum.repos.d<span class="operator">/</span>rabbitmq<span class="operator">-</span>erlang.repo <span class="operator">&lt;&lt;</span> EOF</span><br><span class="line">[rabbitmq<span class="operator">-</span>erlang]</span><br><span class="line">name<span class="operator">=</span>rabbitmq<span class="operator">-</span>erlang</span><br><span class="line">baseurl<span class="operator">=</span>https:<span class="operator">/</span><span class="operator">/</span>dl.bintray.com<span class="operator">/</span>rabbitmq<span class="operator">-</span>erlang<span class="operator">/</span>rpm<span class="operator">/</span>erlang<span class="operator">/</span><span class="number">22</span><span class="operator">/</span>el<span class="operator">/</span><span class="number">8</span><span class="operator">/</span></span><br><span class="line">gpgcheck<span class="operator">=</span><span class="number">1</span></span><br><span class="line">gpgkey<span class="operator">=</span>https:<span class="operator">/</span><span class="operator">/</span>dl.bintray.com<span class="operator">/</span>rabbitmq<span class="operator">/</span>Keys<span class="operator">/</span>rabbitmq<span class="operator">-</span><span class="keyword">release</span><span class="operator">-</span>signing<span class="operator">-</span>key.asc</span><br><span class="line">repo_gpgcheck<span class="operator">=</span><span class="number">0</span></span><br><span class="line">enabled<span class="operator">=</span><span class="number">1</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat <span class="operator">&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>yum.repos.d<span class="operator">/</span>rabbitmq.repo <span class="operator">&lt;&lt;</span> EOF</span><br><span class="line">[bintray<span class="operator">-</span>rabbitmq<span class="operator">-</span>server]</span><br><span class="line">name<span class="operator">=</span>bintray<span class="operator">-</span>rabbitmq<span class="operator">-</span>rpm</span><br><span class="line">baseurl<span class="operator">=</span>https:<span class="operator">/</span><span class="operator">/</span>dl.bintray.com<span class="operator">/</span>rabbitmq<span class="operator">/</span>rpm<span class="operator">/</span>rabbitmq<span class="operator">-</span>server<span class="operator">/</span>v3<span class="number">.8</span>.x<span class="operator">/</span>el<span class="operator">/</span><span class="number">8</span><span class="operator">/</span></span><br><span class="line">gpgcheck<span class="operator">=</span><span class="number">0</span></span><br><span class="line">repo_gpgcheck<span class="operator">=</span><span class="number">0</span></span><br><span class="line">enabled<span class="operator">=</span><span class="number">1</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]#  yum install rabbitmq<span class="operator">-</span>server <span class="operator">-</span>y</span><br><span class="line"> </span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# systemctl enable rabbitmq<span class="operator">-</span>server.service</span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# systemctl <span class="keyword">start</span> rabbitmq<span class="operator">-</span>server.service</span><br><span class="line"> </span><br><span class="line">创建用户</span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# rabbitmqctl add_user openstack RABBIT_PASS</span><br><span class="line">Creating <span class="keyword">user</span> &quot;openstack&quot;</span><br><span class="line"> </span><br><span class="line">授予权限</span><br><span class="line">[root<span class="variable">@controller</span> <span class="operator">~</span>]# rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br><span class="line">Setting permissions <span class="keyword">for</span> <span class="keyword">user</span> &quot;openstack&quot; <span class="keyword">in</span> vhost &quot;/&quot;</span><br><span class="line"> </span><br><span class="line">安装好之后，使用netstat <span class="operator">-</span>tnlup 查看，如果有下图所示的<span class="number">25672</span>和<span class="number">5672</span>端口，则表示安装成功。</span><br></pre></td></tr></table></figure>

<h2 id="5-安装memcache【controller节点】"><a href="#5-安装memcache【controller节点】" class="headerlink" title="5. 安装memcache【controller节点】"></a>5. 安装memcache【controller节点】</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">yum install memcached python3<span class="operator">-</span>memcached <span class="operator">-</span>y</span><br><span class="line"> </span><br><span class="line">sed <span class="operator">-</span>i <span class="string">&#x27;/OPTIONS/c\OPTIONS=&quot;-l 0.0.0.0&quot;&#x27;</span> <span class="operator">/</span>etc<span class="operator">/</span>sysconfig<span class="operator">/</span>memcached</span><br><span class="line"> </span><br><span class="line">systemctl enable memcached.service</span><br><span class="line">systemctl <span class="keyword">start</span> memcached.service</span><br><span class="line">安装和启动好之后，同样使用netstat <span class="operator">-</span>tnlup查看端口情况，看到<span class="number">11211</span>端口有程序在侦听则表示memcache安装成功</span><br></pre></td></tr></table></figure>

<h2 id="6-安装etcd【controller节点】"><a href="#6-安装etcd【controller节点】" class="headerlink" title="6. 安装etcd【controller节点】"></a>6. 安装etcd【controller节点】</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">yum install etcd <span class="operator">-</span>y</span><br><span class="line"> </span><br><span class="line">cp <span class="operator">-</span>a <span class="operator">/</span>etc<span class="operator">/</span>etcd<span class="operator">/</span>etcd.conf&#123;,.bak&#125;</span><br><span class="line">cat <span class="operator">&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>etcd<span class="operator">/</span>etcd.conf <span class="operator">&lt;&lt;</span>EOF </span><br><span class="line">#[<span class="keyword">Member</span>]</span><br><span class="line">ETCD_DATA_DIR<span class="operator">=</span>&quot;/var/lib/etcd/default.etcd&quot;</span><br><span class="line">ETCD_LISTEN_PEER_URLS<span class="operator">=</span>&quot;http://10.1.1.100:2380&quot;</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS<span class="operator">=</span>&quot;http://10.1.1.100:2379&quot;</span><br><span class="line">ETCD_NAME<span class="operator">=</span>&quot;controller&quot;</span><br><span class="line">#[Clustering]</span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS<span class="operator">=</span>&quot;http://10.1.1.100:2380&quot;</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS<span class="operator">=</span>&quot;http://10.1.1.100:2379&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER<span class="operator">=</span>&quot;controller=http://10.1.1.100:2380&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN<span class="operator">=</span>&quot;etcd-cluster-01&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE<span class="operator">=</span>&quot;new&quot;</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line">systemctl enable etcd</span><br><span class="line">systemctl <span class="keyword">start</span> etcd</span><br><span class="line">安装和启动好之后，同样使用netstat <span class="operator">-</span>tnlup查看端口情况，看到<span class="number">2379</span>和<span class="number">2380</span>端口有程序在侦听则表示etcd安装成功</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维笔记</category>
      </categories>
      <tags>
        <tag>Openstack</tag>
      </tags>
  </entry>
</search>
