<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OpenStack Ussuri版安装过程记录</title>
    <url>/2021/06/02/OpenStack%20Victoria%E7%89%88%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zl19940501/image_repository/blog_img01/%E5%8F%AF%E5%8F%AF%E7%88%B1%E6%B2%B9%E7%88%86%E5%8F%BD%E4%B8%81%E5%8D%A1%E9%80%9A%E5%9B%BE%E7%89%87%E5%A3%81%E7%BA%B8%20-%209.jpg"><br>CentOS8安装Openstack V版,虚拟机安装，1个控制节点，1个计算节点</p>
<span id="more"></span>
<h1 id="一、安装前准备"><a href="#一、安装前准备" class="headerlink" title="一、安装前准备"></a>一、安装前准备</h1><p>VMwareWorkstation &amp;&amp; CentOS8系统</p>
<h2 id="1、VMware-Workstation虚拟网络设置"><a href="#1、VMware-Workstation虚拟网络设置" class="headerlink" title="1、VMware Workstation虚拟网络设置"></a>1、VMware Workstation虚拟网络设置</h2><p>编辑》虚拟网络编辑器》更改设置</p>
<p>VMnet0桥接模式</p>
<p>VMnet8 NAT模式(10.0.0.2/24) 注意此处的网关为10.0.0.2，在后面进行虚拟机IP地址配置时候需要将网关配置为不是10.0.0.2。</p>
<p><img src="https://cdn.jsdelivr.net/gh/zl19940501/image_repository/blog_img01/image-20210531110906702.png" alt="image-20210531110906702"></p>
<h2 id="2、虚拟机硬件设置"><a href="#2、虚拟机硬件设置" class="headerlink" title="2、虚拟机硬件设置"></a>2、虚拟机硬件设置</h2><p><img src="https://cdn.jsdelivr.net/gh/zl19940501/image_repository/blog_img01/image-20210531111252051.png" alt="image-20210531111252051"></p>
<p>这里需要注意的有以下几点（后面会贴出OpenStack官方的建议硬件配置)：</p>
<p>1.内存：建议不小于4G</p>
<p>2.处理器：建议内核总数不小于2核</p>
<p>3.网络适配器：第1张网卡ens33采用的是NAT网络，为10.0.0.2/24；第2张网卡采用的是桥接网络，当前为192.168.1.0/24。</p>
<h2 id="3、主机规划"><a href="#3、主机规划" class="headerlink" title="3、主机规划"></a>3、主机规划</h2><table>
<thead>
<tr>
<th align="center">主机名</th>
<th>管理网络</th>
<th>网卡1</th>
<th>供应商网络</th>
<th>网卡2</th>
<th>硬件配置</th>
</tr>
</thead>
<tbody><tr>
<td align="center">controller</td>
<td>10.0.0.11</td>
<td>ens33</td>
<td>192.168.1.11</td>
<td>ens37</td>
<td>2c4g100g</td>
</tr>
<tr>
<td align="center">compute01</td>
<td>10.0.0.31</td>
<td>ens33</td>
<td>192.168.1.31</td>
<td>ens37</td>
<td>2c4g100g</td>
</tr>
</tbody></table>
<h1 id="二、基础环境的安装与配置"><a href="#二、基础环境的安装与配置" class="headerlink" title="二、基础环境的安装与配置"></a>二、基础环境的安装与配置</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="1、主机基础网络配置"><a href="#1、主机基础网络配置" class="headerlink" title="1、主机基础网络配置"></a>1、主机基础网络配置</h3><h4 id="（1）更换网络服务"><a href="#（1）更换网络服务" class="headerlink" title="（1）更换网络服务"></a>（1）更换网络服务</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在安装部署OpenStack时，OpenStack的网络服务会与NetworkManager服务产生冲突，二者无法一起正常工作，需要使用Network。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Network服务</span></span><br><span class="line">dnf install network-scripts -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停用NetworkManager并禁止开机自启</span></span><br><span class="line">systemctl stop NetworkManager &amp;&amp; systemctl <span class="builtin-name">disable</span> NetworkManager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用 Network并设置开机自启</span></span><br><span class="line">systemctl start<span class="built_in"> network </span>&amp;&amp; systemctl <span class="builtin-name">enable</span> network</span><br></pre></td></tr></table></figure>

<h4 id="（2）静态IP配置"><a href="#（2）静态IP配置" class="headerlink" title="（2）静态IP配置"></a>（2）静态IP配置</h4><p>需要注意在2张网卡配置中只保留一个网关，注释其他网卡的网关，此处也可以将网关配置为供应商的网络。</p>
<p>以下为控制节点网络配置，计算节点对照修改</p>
<h5 id="管理网络网卡ens33"><a href="#管理网络网卡ens33" class="headerlink" title="管理网络网卡ens33"></a>管理网络网卡ens33</h5><p>备份ifcfg-ens33文件</p>
<p><code>cp /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-ens33.bak</code></p>
<p>修改以下内容</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设为静态</span></span><br><span class="line"><span class="attribute">BOOTPROTO</span>=static</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设为开机自动连接</span></span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加IP、子网掩码、网关、DNS等</span></span><br><span class="line"><span class="comment"># add follow</span></span><br><span class="line"><span class="attribute">IPADDR</span>=<span class="string">&quot;10.0.0.11&quot;</span></span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">&quot;255.255.255.0&quot;</span></span><br><span class="line"><span class="attribute">GATEWAY</span>=<span class="string">&quot;10.0.0.2&quot;</span></span><br><span class="line"><span class="attribute">DNS1</span>=<span class="string">&quot;10.0.0.2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后的配置：</span></span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-ens33 </span><br><span class="line"><span class="attribute">TYPE</span>=Ethernet</span><br><span class="line"><span class="attribute">PROXY_METHOD</span>=none</span><br><span class="line"><span class="attribute">BROWSER_ONLY</span>=<span class="literal">no</span></span><br><span class="line"><span class="attribute">BOOTPROTO</span>=static</span><br><span class="line"><span class="attribute">DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV4_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attribute">IPV6INIT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV6_AUTOCONF</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV6_DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV6_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attribute">IPV6_ADDR_GEN_MODE</span>=stable-privacy</span><br><span class="line"><span class="attribute">NAME</span>=ens33</span><br><span class="line"><span class="attribute">DEVICE</span>=ens33</span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPADDR</span>=10.0.0.11</span><br><span class="line"><span class="attribute">PREFIX</span>=24</span><br><span class="line"><span class="attribute">GATEWAY</span>=10.0.0.2</span><br><span class="line"><span class="attribute">DNS1</span>=10.0.0.2</span><br><span class="line"><span class="attribute">IPV6_PRIVACY</span>=<span class="literal">no</span></span><br></pre></td></tr></table></figure>

<h5 id="供应商网络网卡ens37"><a href="#供应商网络网卡ens37" class="headerlink" title="供应商网络网卡ens37"></a>供应商网络网卡ens37</h5><p>备份ifcfg-ens37文件</p>
<p><code>cp /etc/sysconfig/network-scripts/ifcfg-ens37 /etc/sysconfig/network-scripts/ifcfg-ens37.bak</code></p>
<p>修改以下内容</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设为静态</span></span><br><span class="line"><span class="attribute">BOOTPROTO</span>=static</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设为开机自动连接</span></span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加IP、子网掩码、网关、DNS等</span></span><br><span class="line"><span class="comment"># add follow</span></span><br><span class="line"><span class="attribute">IPADDR</span>=<span class="string">&quot;192.168.1.11&quot;</span></span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">&quot;255.255.255.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后的配置：</span></span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-ens37</span><br><span class="line"><span class="attribute">TYPE</span>=Ethernet</span><br><span class="line"><span class="attribute">PROXY_METHOD</span>=none</span><br><span class="line"><span class="attribute">BROWSER_ONLY</span>=<span class="literal">no</span></span><br><span class="line"><span class="attribute">BOOTPROTO</span>=static</span><br><span class="line"><span class="attribute">DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV4_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attribute">IPV6INIT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV6_AUTOCONF</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV6_DEFROUTE</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPV6_FAILURE_FATAL</span>=<span class="literal">no</span></span><br><span class="line"><span class="attribute">IPV6_ADDR_GEN_MODE</span>=stable-privacy</span><br><span class="line"><span class="attribute">NAME</span>=ens37</span><br><span class="line"><span class="attribute">DEVICE</span>=ens37</span><br><span class="line"><span class="attribute">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">IPADDR</span>=192.168.1.11</span><br><span class="line"><span class="attribute">PREFIX</span>=24</span><br><span class="line"><span class="attribute">IPV6_PRIVACY</span>=<span class="literal">no</span></span><br></pre></td></tr></table></figure>



<p>配置完成后，重启Network网络服务</p>
<p><code>systemctl restart network</code></p>
<h3 id="2、更换为国内yum源"><a href="#2、更换为国内yum源" class="headerlink" title="2、更换为国内yum源"></a>2、更换为国内yum源</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载阿里云源文件</span></span><br><span class="line">wget -O <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/CentOS-Base.repo https:/</span><span class="regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="number">8</span>.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换阿里云镜像地址</span></span><br><span class="line">sed -i -e <span class="string">&#x27;/mirrors.cloud.aliyuncs.com/d&#x27;</span> -e <span class="string">&#x27;/mirrors.aliyuncs.com/d&#x27;</span> <span class="regexp">/etc/yum</span>.repos.d/CentOS-Base.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立缓存</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure>

<h3 id="3、hostname主机名配置"><a href="#3、hostname主机名配置" class="headerlink" title="3、hostname主机名配置"></a>3、hostname主机名配置</h3><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">设置主机名</span><br><span class="line"><span class="string">hostnamectl</span> <span class="built_in">set-hostname</span> <span class="string">controller</span></span><br><span class="line"><span class="string">hostnamectl</span> <span class="built_in">set-hostname</span> <span class="string">compute1</span></span><br><span class="line"></span><br><span class="line"><span class="string">cat</span> &gt;&gt; /<span class="string">etc</span>/<span class="string">hosts</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="string">10</span>.<span class="string">0</span>.<span class="string">0</span>.<span class="string">11</span> <span class="string">controller</span></span><br><span class="line"><span class="string">10</span>.<span class="string">0</span>.<span class="string">0</span>.<span class="string">31</span> <span class="string">compute01</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h3 id="4、时间同步配置"><a href="#4、时间同步配置" class="headerlink" title="4、时间同步配置"></a>4、时间同步配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 控制节点</span></span><br><span class="line">cat &gt;&gt; /etc/chrony.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">allow 10.0.0.0/24</span></span><br><span class="line"><span class="string">server controller iburst</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算节点</span></span><br><span class="line">cat &gt;&gt; /etc/chrony.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">server controller iburst</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启chronyd服务</span></span><br><span class="line">systemctl restart chronyd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证时间同步状态</span></span><br><span class="line">chronyc sources</span><br></pre></td></tr></table></figure>

<h3 id="5、SSH免密登录配置"><a href="#5、SSH免密登录配置" class="headerlink" title="5、SSH免密登录配置"></a>5、SSH免密登录配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">ansible免密登录playbook剧本配置</span></span><br><span class="line">[<span class="string">root@controller</span> <span class="string">~</span>]<span class="comment"># cat huxing.yaml </span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">openstack</span></span><br><span class="line">    <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">    <span class="attr">tasks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">delete</span> <span class="string">/root/.ssh/</span></span><br><span class="line">       <span class="attr">file:</span> <span class="string">path=/root/.ssh/</span> <span class="string">state=absent</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">/root/.ssh/</span> <span class="string">dir</span></span><br><span class="line">       <span class="attr">file:</span> <span class="string">path=/root/.ssh/</span> <span class="string">mode=700</span> <span class="string">state=directory</span> <span class="string">owner=root</span> <span class="string">group=root</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">generating</span> <span class="string">public/private</span> <span class="string">rsa</span> <span class="string">key</span> <span class="string">pair</span> <span class="comment">#生成公钥和私钥</span></span><br><span class="line">       <span class="attr">shell:</span> <span class="string">ssh-keygen</span> <span class="string">-t</span> <span class="string">rsa</span> <span class="string">-b</span> <span class="number">2048</span> <span class="string">-N</span> <span class="string">&#x27;&#x27;</span> <span class="string">-f</span> <span class="string">/root/.ssh/id_rsa</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">delete</span> <span class="string">/tmp/ssh/</span> <span class="string">dir</span></span><br><span class="line">       <span class="attr">file:</span> <span class="string">path=/tmp/ssh/</span> <span class="string">state=absent</span></span><br><span class="line">       <span class="attr">connection:</span> <span class="string">local</span></span><br><span class="line">       <span class="attr">run_once:</span> <span class="literal">true</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">create</span> <span class="string">/tmp/ssh/</span> <span class="string">dir</span></span><br><span class="line">       <span class="attr">file:</span> <span class="string">path=/tmp/ssh/</span> <span class="string">state=directory</span></span><br><span class="line">       <span class="attr">run_once:</span> <span class="literal">true</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">fetch</span> <span class="string">copy</span> <span class="comment">#从各宿主机将公钥拷贝到本机</span></span><br><span class="line">       <span class="attr">fetch:</span> <span class="string">src=/root/.ssh/id_rsa.pub</span> <span class="string">dest=/tmp/ssh/</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">append</span> <span class="string">file</span> <span class="string">authorized_keys.log</span> <span class="comment">#将各个公钥合并成一个文件</span></span><br><span class="line">       <span class="attr">shell:</span> <span class="string">find</span> <span class="string">/tmp/ssh/*</span> <span class="string">-type</span> <span class="string">f</span> <span class="string">-exec</span> <span class="string">sh</span> <span class="string">-c</span> <span class="string">&#x27;cat &#123;&#125;&gt;&gt;/tmp/ssh/authorized_keys.log&#x27;</span> <span class="string">\;</span></span><br><span class="line">       <span class="attr">connection:</span> <span class="string">local</span></span><br><span class="line">       <span class="attr">run_once:</span> <span class="literal">true</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">authorized_keys</span> <span class="comment">#将合成的公钥进行分发</span></span><br><span class="line">       <span class="attr">copy:</span> <span class="string">src=/tmp/ssh/authorized_keys.log</span> <span class="string">dest=/root/.ssh/authorized_keys</span> <span class="string">mode=600</span></span><br><span class="line">       <span class="attr">tags:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">install</span> <span class="string">ssh</span></span><br><span class="line"></span><br><span class="line"><span class="string">执行</span></span><br><span class="line"><span class="string">ansible-playbook</span> <span class="string">huxing.yaml</span> </span><br></pre></td></tr></table></figure>

<h3 id="6、禁用防火墙，关闭selinux"><a href="#6、禁用防火墙，关闭selinux" class="headerlink" title="6、禁用防火墙，关闭selinux"></a>6、禁用防火墙，关闭selinux</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">sed -i <span class="string">&#x27;/^SELINUX=.*/c SELINUX=disabled&#x27;</span> <span class="regexp">/etc/</span>selinux/config</span><br><span class="line">sed -i <span class="string">&#x27;s/^SELINUXTYPE=.*/SELINUXTYPE=disabled/g&#x27;</span> <span class="regexp">/etc/</span>selinux/config</span><br><span class="line">setenforce <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启生效selinux配置</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="1、常用工具"><a href="#1、常用工具" class="headerlink" title="1、常用工具"></a>1、常用工具</h3><p><code>dnf install net-tools lsof wget iftop vim unzip zip -y</code></p>
<h3 id="2、OpenStack客户端工具"><a href="#2、OpenStack客户端工具" class="headerlink" title="2、OpenStack客户端工具"></a>2、OpenStack客户端工具</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装OpenStack v版存储仓库源</span></span><br><span class="line">dnf <span class="built_in">config</span>-manager --enable powertools</span><br><span class="line">dnf <span class="keyword">install </span>centos-release-openstack-victoria -y</span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line">yum repolist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装openstack客户端工具【controller节点】</span></span><br><span class="line">dnf <span class="keyword">install </span>python3-openstackclient openstack-selinux -y</span><br></pre></td></tr></table></figure>

<p>以下各软件在控制节点安装即可</p>
<h3 id="3、数据库【controller节点】"><a href="#3、数据库【controller节点】" class="headerlink" title="3、数据库【controller节点】"></a>3、数据库【controller节点】</h3><p>安装Mariadb数据库，也可安装MySQL数据库</p>
<p><code>dnf install -y mariadb mariadb-server python3-PyMySQL</code><br>创建和编辑文件，添加如下信息</p>
<p><code>touch /etc/my.cnf.d/openstack.cnf</code><br><code>vim   /etc/my.cnf.d/openstack.cnf</code></p>
<p>文件内容如下</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">bind-address</span> = <span class="number">10.0</span>.<span class="number">0.11</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-storage-engine</span> = innodb</span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="literal">on</span></span><br><span class="line"><span class="attr">max_connections</span> = <span class="number">4096</span></span><br><span class="line"><span class="attr">collation-server</span> = utf8_general_ci</span><br><span class="line"><span class="attr">character-set-server</span> = utf8</span><br></pre></td></tr></table></figure>


<p>启动数据库并设置为开机自启</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">systemctl</span> <span class="string">enable</span> <span class="string">mariadb</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">start</span> <span class="string">mariadb</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">status</span> <span class="string">mariadb</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="built_in">list-unit-files</span> |<span class="string">grep</span> <span class="string">mariadb</span>.<span class="string">service</span></span><br></pre></td></tr></table></figure>

<p>配置mariadb数据库密码，执行</p>
<p><code>/usr/bin/mysql_secure_installation</code></p>
<p>依提示完成配置，测试环境中，设置密码为root，这里仅配置，相关的数据库在后面需要时再单独创建</p>
<p>测试一下：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">systemctl restart mariadb.service</span><br><span class="line">systemctl status mariadb.service</span><br><span class="line"></span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br><span class="line">show databases;</span><br><span class="line">select user,host from mysql.user;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h3 id="4、消息队列Rabbitmq【controller节点】"><a href="#4、消息队列Rabbitmq【controller节点】" class="headerlink" title="4、消息队列Rabbitmq【controller节点】"></a>4、消息队列Rabbitmq【controller节点】</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 安装软件包</span></span><br><span class="line">dnf install rabbitmq-server -y</span><br><span class="line"></span><br><span class="line"><span class="meta"># 启动消息队列服务并设置为开机自启</span></span><br><span class="line">systemctl enable rabbitmq-server.service</span><br><span class="line">systemctl start rabbitmq-server.service</span><br><span class="line">systemctl status rabbitmq-server.service</span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加openstack用户并设置密码为111111</span></span><br><span class="line">rabbitmqctl add_user openstack <span class="number">111111</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 给openstack用户可读可写可配置权限</span></span><br><span class="line">rabbitmqctl set_permissions openstack <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span></span><br><span class="line">rabbitmqctl list_users </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># 为了方便监控，启用Web界面管理插件</span></span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br><span class="line">rabbitmq-plugins list</span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装成功后通过命令netstat -lntup查看多了一个15672的服务端口，</span></span><br><span class="line"><span class="meta"># 通过浏览器访问可以成功登录RabbitMQ，默认管理员账号guest，密码guest</span></span><br><span class="line">netstat -lntup</span><br><span class="line">lsof -i:<span class="number">15672</span></span><br></pre></td></tr></table></figure>

<h3 id="5、Memcached缓存【controller节点】"><a href="#5、Memcached缓存【controller节点】" class="headerlink" title="5、Memcached缓存【controller节点】"></a>5、Memcached缓存【controller节点】</h3><p>身份服务验证机制使用Memcached来缓存令牌。Memcached服务通常在控制节点上运行。</p>
<p>安装软件包</p>
<p><code>dnf install memcached python3-memcached -y</code></p>
<p>编辑vim /etc/sysconfig/memcached文件，将OPTTONS行修改成如下信息</p>
<p><code>OPTIONS=&quot;-l 127.0.0.1,::1,controller&quot;</code></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>sysconfig/memcached&#123;,.bak&#125;</span><br><span class="line">sed -i <span class="string">&#x27;s|127.0.0.1,::1|127.0.0.1,::1,controller|g&#x27;</span> <span class="regexp">/etc/</span>sysconfig/memcached </span><br></pre></td></tr></table></figure>

<p>启动Memcached服务并设置开机自启</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">systemctl</span> <span class="string">restart</span> <span class="string">memcached</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">enable</span> <span class="string">memcached</span>.<span class="string">service</span></span><br><span class="line"></span><br><span class="line"><span class="string">systemctl</span> <span class="string">status</span> <span class="string">memcached</span>.<span class="string">service</span></span><br><span class="line"><span class="string">netstat</span> -<span class="string">anptl</span>|<span class="string">grep</span> <span class="string">memcached</span></span><br><span class="line"><span class="string">systemctl</span> <span class="built_in">list-unit-files</span> |<span class="string">grep</span> <span class="string">memcached</span>.<span class="string">service</span></span><br></pre></td></tr></table></figure>

<h3 id="6、Etcd集群【controller节点】"><a href="#6、Etcd集群【controller节点】" class="headerlink" title="6、Etcd集群【controller节点】"></a>6、Etcd集群【controller节点】</h3><p>安装软件包</p>
<p><code>dnf install etcd -y</code></p>
<p>编辑etcd.conf配置文件</p>
<p><code>cp /etc/etcd/etcd.conf&#123;,.bak&#125;</code></p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/etcd/etcd.conf &lt;&lt;EOF </span><br><span class="line"><span class="comment">#[Member]</span></span><br><span class="line">ETCD_DATA_DIR=<span class="string">&quot;/var/lib/etcd/default.etcd&quot;</span></span><br><span class="line">ETCD_LISTEN_PEER_URLS=<span class="string">&quot;http://10.0.0.11:2380&quot;</span></span><br><span class="line">ETCD_LISTEN_CLIENT_URLS=<span class="string">&quot;http://10.0.0.11:2379&quot;</span></span><br><span class="line">ETCD_NAME=<span class="string">&quot;controller&quot;</span></span><br><span class="line"><span class="comment">#[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class="string">&quot;http://10.0.0.11:2380&quot;</span></span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS=<span class="string">&quot;http://10.0.0.11:2379&quot;</span></span><br><span class="line">ETCD_INITIAL_CLUSTER=<span class="string">&quot;controller=http://10.0.0.11:2380&quot;</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN=<span class="string">&quot;etcd-cluster-01&quot;</span></span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=<span class="string">&quot;new&quot;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>


<p>启动Etcd服务并设置开机自启</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">systemctl</span> <span class="string">restart</span> <span class="string">etcd</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">enable</span> <span class="string">etcd</span>.<span class="string">service</span></span><br><span class="line"></span><br><span class="line"><span class="string">systemctl</span> <span class="string">status</span> <span class="string">etcd</span>.<span class="string">service</span></span><br><span class="line"><span class="string">netstat</span> -<span class="string">anptl</span>|<span class="string">grep</span> <span class="string">etcd</span></span><br><span class="line"><span class="string">systemctl</span> <span class="built_in">list-unit-files</span> |<span class="string">grep</span> <span class="string">etcd</span>.<span class="string">service</span></span><br></pre></td></tr></table></figure>

<h1 id="三、控制节点-安装keystone身份认证服务"><a href="#三、控制节点-安装keystone身份认证服务" class="headerlink" title="三、控制节点-安装keystone身份认证服务"></a>三、控制节点-安装keystone身份认证服务</h1><h2 id="1、创建keystone数据库并授权"><a href="#1、创建keystone数据库并授权" class="headerlink" title="1、创建keystone数据库并授权"></a>1、创建keystone数据库并授权</h2><p>（1）登录进入数据库</p>
<p>使用mysql数据库的root账户登录，密码为控制节点环境准备时初始化mysql数据设置的密码为root。</p>
<p><code>mysql -u root -proot</code></p>
<p>（2）创建keystone数据库并授权</p>
<p>创建keystone数据库,设置密码为111111，授予对keystone数据库的访问权限，刷新退出数据库.</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> keystone;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">&#x27;keystone&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> keystone.* <span class="keyword">TO</span> <span class="string">&#x27;keystone&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"></span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.<span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="2、keystone相关软件安装与配置"><a href="#2、keystone相关软件安装与配置" class="headerlink" title="2、keystone相关软件安装与配置"></a>2、keystone相关软件安装与配置</h2><h3 id="（1）安装keystone相关软件包"><a href="#（1）安装keystone相关软件包" class="headerlink" title="（1）安装keystone相关软件包"></a>（1）安装keystone相关软件包</h3><p>如果要使用https访问，需要安装mod_ssl</p>
<p><code>dnf install openstack-keystone httpd python3-mod_wsgi -y</code></p>
<h3 id="（2）修改-etc-keystone-keystone-conf文件"><a href="#（2）修改-etc-keystone-keystone-conf文件" class="headerlink" title="（2）修改/etc/keystone/keystone.conf文件"></a>（2）修改/etc/keystone/keystone.conf文件</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>keystone/keystone.conf&#123;,.bak&#125;</span><br><span class="line"><span class="keyword">grep</span> -Ev <span class="string">&quot;^$|#&quot;</span> <span class="regexp">/etc/</span>keystone<span class="regexp">/keystone.conf.bak &gt; /</span>etc<span class="regexp">/keystone/</span>keystone.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[database\]/a\connection = mysql+pymysql://keystone:111111@controller/keystone&#x27;</span> <span class="regexp">/etc/</span>keystone/keystone.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[token\]/a\provider = fernet&#x27;</span> <span class="regexp">/etc/</span>keystone/keystone.conf</span><br></pre></td></tr></table></figure>

<h3 id="（3）初始化同步keystone数据库"><a href="#（3）初始化同步keystone数据库" class="headerlink" title="（3）初始化同步keystone数据库"></a>（3）初始化同步keystone数据库</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">su</span> -s /bin/sh -c <span class="string">&quot;keystone-manage db_sync&quot;</span> keystone同步完成，进行连接测试mysql  -ukeystone -p<span class="number">111111</span> -e <span class="string">&quot;use keystone;show tables;&quot;</span>mysql -h<span class="number">10.0.0.11</span> -ukeystone -p<span class="number">111111</span> -e <span class="string">&quot;use keystone;show tables;&quot;</span>|wc -l</span><br></pre></td></tr></table></figure>

<h3 id="（4）初始化Fernet令牌库"><a href="#（4）初始化Fernet令牌库" class="headerlink" title="（4）初始化Fernet令牌库"></a>（4）初始化Fernet令牌库</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">keystone-manage fernet_setup --keystone-<span class="keyword">user</span> <span class="title">keystone</span> --keystone-<span class="keyword">group</span> <span class="title">keystonekeystone-manage</span> credential_setup --keystone-<span class="keyword">user</span> <span class="title">keystone</span> --keystone-<span class="keyword">group</span> <span class="title">keystone</span></span><br></pre></td></tr></table></figure>

<h3 id="（5）初始化引导keystone认证服务"><a href="#（5）初始化引导keystone认证服务" class="headerlink" title="（5）初始化引导keystone认证服务"></a>（5）初始化引导keystone认证服务</h3><p><code>keystone-manage bootstrap --bootstrap-password 111111   --bootstrap-admin-url http://controller:5000/v3/   --bootstrap-internal-url http://controller:5000/v3/   --bootstrap-public-url http://controller:5000/v3/   --bootstrap-region-id RegionOne</code></p>
<h3 id="（6）配置启动Apache-Http服务"><a href="#（6）配置启动Apache-Http服务" class="headerlink" title="（6）配置启动Apache Http服务"></a>（6）配置启动Apache Http服务</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">编辑<span class="regexp">/etc/</span>httpd<span class="regexp">/conf/</span>httpd.conf文件</span><br><span class="line">cp <span class="regexp">/etc/</span>httpd<span class="regexp">/conf/</span>httpd.conf&#123;,.bak&#125;</span><br><span class="line">sed -i <span class="string">&quot;s/#ServerName www.example.com:80/ServerName controller/&quot;</span> <span class="regexp">/etc/</span>httpd<span class="regexp">/conf/</span>httpd.conf</span><br><span class="line"></span><br><span class="line">创建<span class="regexp">/usr/</span>share<span class="regexp">/keystone/</span>wsgi-keystone.conf文件链接</span><br><span class="line">ln -s <span class="regexp">/usr/</span>share<span class="regexp">/keystone/</span>wsgi-keystone.conf <span class="regexp">/etc/</span>httpd<span class="regexp">/conf.d/</span></span><br><span class="line"></span><br><span class="line">启动httpd并配置开机自启动</span><br><span class="line">systemctl start httpd &amp;&amp; systemctl enable httpd</span><br><span class="line"></span><br><span class="line">netstat -anptl|<span class="keyword">grep</span> httpd</span><br><span class="line">systemctl list-unit-files |<span class="keyword">grep</span> httpd.service</span><br></pre></td></tr></table></figure>

<h3 id="（7）创建环境变量脚本"><a href="#（7）创建环境变量脚本" class="headerlink" title="（7）创建环境变量脚本"></a>（7）创建环境变量脚本</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">cat &gt;&gt; ~/admin-openrc.sh  &lt;&lt; EOF</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_PROJECT_DOMAIN_NAME</span>=Default</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_USER_DOMAIN_NAME</span>=Default</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_PROJECT_NAME</span>=admin</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_USERNAME</span>=admin</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_PASSWORD</span>=111111</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_AUTH_URL</span>=http://controller:5000/v3</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_IDENTITY_API_VERSION</span>=3</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OS_IMAGE_API_VERSION</span>=2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>附：常用的openstack管理命令，需要应用管理员的环境变量</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看keystone实例相关信息</span></span><br><span class="line">openstack endpoint list</span><br><span class="line">openstack project list</span><br><span class="line">openstack <span class="keyword">user</span> <span class="title">list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除endpoint</span></span><br><span class="line">openstack endpoint delete [ID]</span><br></pre></td></tr></table></figure>

<h3 id="（8）创建keystone的一般实例"><a href="#（8）创建keystone的一般实例" class="headerlink" title="（8）创建keystone的一般实例"></a>（8）创建keystone的一般实例</h3><p><code>source ./admin-openrc.sh</code><br><code>openstack catalog list</code></p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">（1）【非必须】 创建一个名为example的域</span><br><span class="line"></span><br><span class="line">创建域，程序中已存在默认域，此命令只是一个创建域的例子，可以不执行</span><br><span class="line">#openstack domain <span class="keyword">create</span> --description <span class="string">&quot;An Example Domain&quot;</span> example</span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）【必须】 创建名为service的项目，也叫做租户,在default域中。</span><br><span class="line">openstack project <span class="keyword">create</span> --domain default --description <span class="string">&quot;Service Project&quot;</span> service</span><br><span class="line"></span><br><span class="line">（<span class="number">3</span>）【非必须】 创建名为myproject项目，在default域中。</span><br><span class="line">#openstack project <span class="keyword">create</span> --domain default --description <span class="string">&quot;Demo Project&quot;</span> myproject</span><br><span class="line"></span><br><span class="line">（<span class="number">4</span>）【非必须】 创建myuser用户，在default域中。</span><br><span class="line">以下命令会在local_user表增加myuser用户。使用–<span class="keyword">password</span>选项为直接配置明文密码，使用–<span class="keyword">password</span>-prompt选项为交互式输入密码,直接创建用户和密码.</span><br><span class="line">#openstack <span class="keyword">user</span> <span class="keyword">create</span> --domain default --<span class="keyword">password</span>-prompt myuser</span><br><span class="line"></span><br><span class="line">执行命令后需要设置用户密码，输入两次相同的密码</span><br><span class="line"></span><br><span class="line">（<span class="number">5</span>）【非必须】 创建myrole角色，在<span class="keyword">role</span>表中。</span><br><span class="line"></span><br><span class="line"># openstack <span class="keyword">role</span> <span class="keyword">create</span> myrole</span><br><span class="line"></span><br><span class="line">（<span class="number">6</span>）**【非必须】**将myrole角色添加到myproject项目和myuser用户</span><br><span class="line">#openstack <span class="keyword">role</span> add --project myproject --<span class="keyword">user</span> myuser myrole</span><br><span class="line"></span><br><span class="line">（<span class="number">7</span>）查看keystone实例相关信息</span><br><span class="line">source admin-openrc.sh </span><br><span class="line">openstack <span class="keyword">role</span> list</span><br><span class="line">openstack endpoint list</span><br><span class="line">openstack project list</span><br><span class="line">openstack <span class="keyword">user</span> list</span><br></pre></td></tr></table></figure>

<h3 id="（9）验证操作keystone是否安装配置成功"><a href="#（9）验证操作keystone是否安装配置成功" class="headerlink" title="（9）验证操作keystone是否安装配置成功"></a>（9）验证操作keystone是否安装配置成功</h3><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">验证KeyStone服务是否正常</span><br><span class="line">[root<span class="meta">@controller</span> ~]<span class="comment"># openstack token issue</span></span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">|<span class="string"> Field      </span>|<span class="string"> Value                                                                                                                                                                                   </span>|</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">|<span class="string"> expires    </span>|<span class="string"> 2021-05-31T09:55:26+0000                                                                                                                                                                </span>|</span><br><span class="line">|<span class="string"> id         </span>|<span class="string"> gAAAAABgtKR-1fiww05fehawZ532h8sbf5Jcwfo4kGd58w6zkC_zdilNW7f50yjf-EFEUMDCw-kaUXVs-6T9r0LKeR26oeyqJ5ywYP3G0fYnQedcVun6xUBWfT_CH_OEhN7XjuLfdCKB4Udx2nSTKfwOoSEAXAtsa4ry0jpTjB18yUN46mrvNYg </span>|</span><br><span class="line">|<span class="string"> project_id </span>|<span class="string"> 1f3f5e0c452d49d4a1ca013f5a89f8fe                                                                                                                                                        </span>|</span><br><span class="line">|<span class="string"> user_id    </span>|<span class="string"> db375734fa174365bfbd2640ee14383b                                                                                                                                                        </span>|</span><br><span class="line">+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">出现如以上信息就说明KeyStone配置成功</span><br></pre></td></tr></table></figure>

<h1 id="四、控制节点-安装glance镜像服务"><a href="#四、控制节点-安装glance镜像服务" class="headerlink" title="四、控制节点-安装glance镜像服务"></a>四、控制节点-安装glance镜像服务</h1><h2 id="1、创建glance数据库并授权"><a href="#1、创建glance数据库并授权" class="headerlink" title="1、创建glance数据库并授权"></a>1、创建glance数据库并授权</h2><p>（1）使用mysql数据库的root账户登录</p>
<p>密码为控制节点环境准备时初始化mysql数据设置的密码为root。</p>
<p><code>mysql -u root -proot</code><br>（2）创建glance数据库并授权,设置密码为111111。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> glance;<span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">&#x27;glance&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;<span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> glance.* <span class="keyword">TO</span> <span class="string">&#x27;glance&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;flush <span class="keyword">privileges</span>;<span class="keyword">show</span> databases;<span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.<span class="keyword">user</span>;<span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="2-创建服务凭据"><a href="#2-创建服务凭据" class="headerlink" title="2.创建服务凭据"></a>2.创建服务凭据</h2><h3 id="（1）在keystone上创建glance用户"><a href="#（1）在keystone上创建glance用户" class="headerlink" title="（1）在keystone上创建glance用户"></a>（1）在keystone上创建glance用户</h3><p>以下命令将在local_user表创建glance用户</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">source admin-openrc.sh openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --<span class="attr">password=</span><span class="number">111111</span> glanceopenstack <span class="keyword">user</span> <span class="title">list</span></span><br></pre></td></tr></table></figure>

<h3 id="（2）在keystone上将glance用户添加为service项目的admin角色-权限"><a href="#（2）在keystone上将glance用户添加为service项目的admin角色-权限" class="headerlink" title="（2）在keystone上将glance用户添加为service项目的admin角色(权限)"></a>（2）在keystone上将glance用户添加为service项目的admin角色(权限)</h3><p>以下命令无输出</p>
<p><code>openstack role add --project service --user glance admin</code></p>
<h3 id="（3）创建glance镜像服务的实体"><a href="#（3）创建glance镜像服务的实体" class="headerlink" title="（3）创建glance镜像服务的实体"></a>（3）创建glance镜像服务的实体</h3><p>以下命令在service表中增加glance项目</p>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">openstack</span> <span class="string">service</span> <span class="string">create</span> <span class="built_in">--name</span> <span class="string">glance</span> <span class="built_in">--description</span> <span class="string">&quot;OpenStack Image&quot;</span> <span class="string">imageopenstack</span> <span class="string">service</span> <span class="string">list</span></span><br></pre></td></tr></table></figure>

<h3 id="（4）创建镜像服务的-API-端点（endpoint）"><a href="#（4）创建镜像服务的-API-端点（endpoint）" class="headerlink" title="（4）创建镜像服务的 API 端点（endpoint）"></a>（4）创建镜像服务的 API 端点（endpoint）</h3><p>【这里会影响API的调用】<br>以下命令会在endpoint表增加3条项目</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne image public http:<span class="regexp">//</span>controller:<span class="number">9292</span>openstack endpoint create --region RegionOne image internal http:<span class="regexp">//</span>controller:<span class="number">9292</span>openstack endpoint create --region RegionOne image admin http:<span class="regexp">//</span>controller:<span class="number">9292</span>openstack endpoint list</span><br></pre></td></tr></table></figure>

<p>至此，glance在keystone上面注册完成，下面可以进行安装</p>
<h2 id="3、glance相关软件安装与配置"><a href="#3、glance相关软件安装与配置" class="headerlink" title="3、glance相关软件安装与配置"></a>3、glance相关软件安装与配置</h2><h3 id="（1）安装glance软件"><a href="#（1）安装glance软件" class="headerlink" title="（1）安装glance软件"></a>（1）安装glance软件</h3><p><code>dnf install openstack-glance -y</code></p>
<h3 id="（2）配置文件修改"><a href="#（2）配置文件修改" class="headerlink" title="（2）配置文件修改"></a>（2）配置文件修改</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/g</span>lance<span class="regexp">/glance-api.conf&#123;,.bak&#125;cp -a /</span>etc<span class="regexp">/glance/g</span>lance-registry.conf&#123;,.bak&#125;grep -Ev <span class="string">&#x27;^$|#&#x27;</span> <span class="regexp">/etc/g</span>lance<span class="regexp">/glance-api.conf.bak &gt; /</span>etc<span class="regexp">/glance/g</span>lance-api.confgrep -Ev <span class="string">&#x27;^$|#&#x27;</span> <span class="regexp">/etc/g</span>lance<span class="regexp">/glance-registry.conf.bak &gt; /</span>etc<span class="regexp">/glance/g</span>lance-registry.confsed -i <span class="string">&#x27;/\[database\]/a\connection = mysql+pymysql://glance:111111@controller/glance&#x27;</span> <span class="regexp">/etc/g</span>lance<span class="regexp">/glance-api.confsed -i &#x27;/</span>\[glance_store\]<span class="regexp">/a\filesystem_store_datadir = /</span>var<span class="regexp">/lib/g</span>lance<span class="regexp">/images/</span><span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[glance_store\]/</span>a\default_store = file<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[glance_store\]/</span>a\stores = file,http<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\password = <span class="number">111111</span><span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\username = glance<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\project_name = service<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\user_domain_name = Default<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\project_domain_name = Default<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\auth_type = password<span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\memcached_servers = controller:<span class="number">11211</span><span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\auth_url = http:<span class="regexp">//</span>controller:<span class="number">5000</span><span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\www_authenticate_uri = http:<span class="regexp">//</span>controller:<span class="number">5000</span><span class="string">&#x27; /etc/glance/glance-api.confsed -i &#x27;</span><span class="regexp">/\[paste_deploy\]/</span>a\flavor = keystone<span class="string">&#x27; /etc/glance/glance-api.conf</span></span><br></pre></td></tr></table></figure>

<h3 id="（3）同步glance数据库"><a href="#（3）同步glance数据库" class="headerlink" title="（3）同步glance数据库"></a>（3）同步glance数据库</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">为glance镜像服务初始化同步数据库，生成的相关表su -s <span class="regexp">/bin/</span>sh -c <span class="string">&quot;glance-manage db_sync&quot;</span> glance忽略输出的内容,最后结果为：Database is synced successfully.同步完成进行连接测试保证所有需要的表已经建立，否则后面可能无法进行下去mysql -uglance -p111111 -e <span class="string">&quot;use glance;show tables;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="（4）glance镜像服务启动并设置开机自启"><a href="#（4）glance镜像服务启动并设置开机自启" class="headerlink" title="（4）glance镜像服务启动并设置开机自启"></a>（4）glance镜像服务启动并设置开机自启</h3><p>systemctl start openstack-glance-api &amp;&amp; systemctl enable openstack-glance-api</p>
<h3 id="（5）镜像上传验证"><a href="#（5）镜像上传验证" class="headerlink" title="（5）镜像上传验证"></a>（5）镜像上传验证</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">下载一个测试镜像先上传到系统中，然后上传到glance服务</span><br><span class="line"></span><br><span class="line">1.下载镜像</span><br><span class="line">wget http:<span class="string">//download.cirros-cloud.net/0.5.0/cirros-0.5.0-x86_64-disk.img</span></span><br><span class="line">wget http:<span class="string">//download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</span></span><br><span class="line">wget http:<span class="string">//download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img</span></span><br><span class="line">3.上传镜像</span><br><span class="line">使用qcow2磁盘格式， bare容器格式上传镜像到镜像服务并设置公共可见，这样所有的项目都可以访问它</span><br><span class="line">glance image-create <span class="params">--name</span> <span class="string">&quot;cirros-0.5.0&quot;</span> <span class="params">--file</span> <span class="string">./cirros-0.5.0-x86_64-disk.img</span>  <span class="params">--disk-format</span> qcow2 <span class="params">--container-format</span> bare  <span class="params">--visibility</span> public</span><br><span class="line">glance image-create <span class="params">--name</span> <span class="string">&quot;cirros-0.4.0&quot;</span> <span class="params">--file</span> <span class="string">./cirros-0.4.0-x86_64-disk.img</span>  <span class="params">--disk-format</span> qcow2 <span class="params">--container-format</span> bare  <span class="params">--visibility</span> public</span><br><span class="line">openstack image create <span class="string">&quot;cirros-0.3.5&quot;</span>  <span class="params">--file</span> <span class="string">./cirros-0.3.5-x86_64-disk.img</span> <span class="params">--disk-format</span> qcow2 <span class="params">--container-format</span> bare <span class="params">--public</span></span><br><span class="line">4.查看镜像信息</span><br><span class="line">openstack image list</span><br><span class="line"></span><br><span class="line">在<span class="string">/var/lib/glance/images/</span>目录下可以看到镜像文件，如果要删除此镜像需要删除数据库信息，再删除镜像文件</span><br><span class="line"><span class="keyword">ls</span> <span class="string">/var/lib/glance/images/</span></span><br><span class="line">镜像信息都是存在glance数据库中的，我们可以在glance库中的images表看到上传的镜像信息.</span><br></pre></td></tr></table></figure>

<h1 id="五、控制节点-Placement服务组件"><a href="#五、控制节点-Placement服务组件" class="headerlink" title="五、控制节点-Placement服务组件"></a>五、控制节点-Placement服务组件</h1><p>Placement服务的作用是跟踪资源（如计算节点，存储资源池，网络资源池等）的使用情况，提供自定义资源的能力，为分配资源提供服务。Placement在openstack的Stein版本之前是属于Nova组件的一部分。</p>
<p>在安装Nova之前需要先安装此组件。</p>
<h2 id="1、创建placement数据库并授权"><a href="#1、创建placement数据库并授权" class="headerlink" title="1、创建placement数据库并授权"></a>1、创建placement数据库并授权</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># 使用mysql数据库的root账户登录，密码为控制节点环境准备时初始化mysql数据设置的密码为root。</span><br><span class="line">mysql -u root -proot</span><br><span class="line"></span><br><span class="line"># 创建placement数据库并授权,设置密码为<span class="number">111111</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> placement;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> placement.* <span class="keyword">TO</span> <span class="string">&#x27;placement&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> placement.* <span class="keyword">TO</span> <span class="string">&#x27;placement&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"></span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.<span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="2、创建服务凭据"><a href="#2、创建服务凭据" class="headerlink" title="2、创建服务凭据"></a>2、创建服务凭据</h2><p>同glance一样，创建并注册该项目的服务证书、域用户、项目、实体</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个plancement用户并设置密码为111111</span></span><br><span class="line">openstack user create <span class="params">--domain</span> default <span class="params">--password</span> 111111 placement</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用admin角色将Placement用户添加到服务项目中</span></span><br><span class="line">openstack role add <span class="params">--project</span> service <span class="params">--user</span> placement admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建Plancement服务</span></span><br><span class="line">openstack service create <span class="params">--name</span> placement <span class="params">--description</span> <span class="string">&quot;Placement API&quot;</span> placement</span><br><span class="line">openstack service list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建placement项目的endpoint（API端口）</span></span><br><span class="line">openstack endpoint create <span class="params">--region</span> RegionOne placement public http:<span class="string">//controller</span><span class="function">:8778</span></span><br><span class="line">openstack endpoint create <span class="params">--region</span> RegionOne placement internal http:<span class="string">//controller</span><span class="function">:8778</span></span><br><span class="line">openstack endpoint create <span class="params">--region</span> RegionOne placement admin http:<span class="string">//controller</span><span class="function">:8778</span></span><br><span class="line">openstack endpoint list</span><br></pre></td></tr></table></figure>

<h2 id="3、placement相关软件安装与配置"><a href="#3、placement相关软件安装与配置" class="headerlink" title="3、placement相关软件安装与配置"></a>3、placement相关软件安装与配置</h2><h3 id="（1）安装placement软件"><a href="#（1）安装placement软件" class="headerlink" title="（1）安装placement软件"></a>（1）安装placement软件</h3><p><code>dnf install openstack-placement-api -y</code></p>
<h3 id="（2）配置文件修改-1"><a href="#（2）配置文件修改-1" class="headerlink" title="（2）配置文件修改"></a>（2）配置文件修改</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>placement<span class="regexp">/placement.conf&#123;,.bak&#125;grep -Ev &#x27;^$|#&#x27; /</span>etc<span class="regexp">/placement/</span>placement.conf.bak &gt; <span class="regexp">/etc/</span>placement<span class="regexp">/placement.confsed -i &#x27;/</span>\[placement_database\]<span class="regexp">/a\connection = mysql+pymysql:/</span><span class="regexp">/placement:111111@controller/</span>placement<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[api\]/</span>a\auth_strategy = keystone<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\password = <span class="number">111111</span><span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\username = placement<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\project_name = service<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\user_domain_name = Default<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\project_domain_name = Default<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\auth_type = password<span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\memcached_servers = controller:<span class="number">11211</span><span class="string">&#x27; /etc/placement/placement.confsed -i &#x27;</span><span class="regexp">/\[keystone_authtoken\]/</span>a\auth_url = http:<span class="regexp">//</span>controller:<span class="number">5000</span><span class="regexp">/v3&#x27; /</span>etc<span class="regexp">/placement/</span>placement.conf修改placement的apache配置文件（官方文档坑点之一，这个步骤官方文档没有提到，如果不做，后面计算服务检查时将会报错）cat &gt;&gt;<span class="regexp">/etc/</span>httpd<span class="regexp">/conf.d/</span><span class="number">00</span>-placement-api.conf&lt;&lt;EOF&lt;Directory <span class="regexp">/usr/</span>bin&gt;   &lt;IfVersion &gt;= <span class="number">2.4</span>&gt;      Require all granted   &lt;<span class="regexp">/IfVersion&gt;   &lt;IfVersion &lt; 2.4&gt;      Order allow,deny      Allow from all   &lt;/</span>IfVersion&gt;&lt;/Directory&gt;EOF</span><br></pre></td></tr></table></figure>

<h3 id="（3）同步placement数据库"><a href="#（3）同步placement数据库" class="headerlink" title="（3）同步placement数据库"></a>（3）同步placement数据库</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">su -s <span class="regexp">/bin/</span>sh -c <span class="string">&quot;placement-manage db sync&quot;</span> placementmysql -uplacement -p111111 -e <span class="string">&quot;use placement;show tables;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="（4）重启Apache服务（httpd）"><a href="#（4）重启Apache服务（httpd）" class="headerlink" title="（4）重启Apache服务（httpd）"></a>（4）重启Apache服务（httpd）</h3><p>如果重启失败，注意防火墙配置</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">restart</span> httpdsystemctl <span class="built_in">status</span> httpd</span><br></pre></td></tr></table></figure>

<h3 id="（5）检查Placement服务状态"><a href="#（5）检查Placement服务状态" class="headerlink" title="（5）检查Placement服务状态"></a>（5）检查Placement服务状态</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# placement-status upgrade check</span><br><span class="line"><span class="code">+----------------------------------+</span></span><br><span class="line"><span class="section">| Upgrade Check Results            |</span></span><br><span class="line"><span class="section">+----------------------------------+</span></span><br><span class="line">| Check: Missing Root Provider IDs |</span><br><span class="line">| Result: Success                  |</span><br><span class="line"><span class="section">| Details: None                    |</span></span><br><span class="line"><span class="section">+----------------------------------+</span></span><br><span class="line">| Check: Incomplete Consumers      |</span><br><span class="line">| Result: Success                  |</span><br><span class="line"><span class="section">| Details: None                    |</span></span><br><span class="line"><span class="section">+----------------------------------+</span></span><br></pre></td></tr></table></figure>

<h1 id="六、控制节点-Nova计算服务组件"><a href="#六、控制节点-Nova计算服务组件" class="headerlink" title="六、控制节点-Nova计算服务组件"></a>六、控制节点-Nova计算服务组件</h1><h2 id="1、创建数据库并授权"><a href="#1、创建数据库并授权" class="headerlink" title="1、创建数据库并授权"></a>1、创建数据库并授权</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line"># 需要创建<span class="number">3</span>个数据库，分别是：nova_api，nova，nova_cell0，设置密码为<span class="number">111111</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_api;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> nova_cell0;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_api.* <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova.* <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> nova_cell0.* <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;</span><br><span class="line"></span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.<span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="2、创建计算服务凭据"><a href="#2、创建计算服务凭据" class="headerlink" title="2、创建计算服务凭据"></a>2、创建计算服务凭据</h2><h3 id="（1）在keystone上创建nova用户"><a href="#（1）在keystone上创建nova用户" class="headerlink" title="（1）在keystone上创建nova用户"></a>（1）在keystone上创建nova用户</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --<span class="attr">password=</span><span class="number">111111</span> nova</span><br><span class="line">openstack <span class="keyword">user</span> <span class="title">list</span></span><br></pre></td></tr></table></figure>

<h3 id="（2）在keystone上将nova用户，配置为admin角色，并添加进service项目"><a href="#（2）在keystone上将nova用户，配置为admin角色，并添加进service项目" class="headerlink" title="（2）在keystone上将nova用户，配置为admin角色，并添加进service项目"></a>（2）在keystone上将nova用户，配置为admin角色，并添加进service项目</h3><p><code>openstack role add --project service --user nova admin</code></p>
<h3 id="（3）创建nova计算服务的实体"><a href="#（3）创建nova计算服务的实体" class="headerlink" title="（3）创建nova计算服务的实体"></a>（3）创建nova计算服务的实体</h3><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">openstack</span> <span class="string">service</span> <span class="string">create</span> <span class="built_in">--name</span> <span class="string">nova</span> <span class="built_in">--description</span> <span class="string">&quot;OpenStack Compute&quot;</span> <span class="string">compute</span></span><br><span class="line"><span class="string">openstack</span> <span class="string">service</span> <span class="string">list</span></span><br></pre></td></tr></table></figure>

<h3 id="（4）创建compute-API服务端点"><a href="#（4）创建compute-API服务端点" class="headerlink" title="（4）创建compute API服务端点"></a>（4）创建compute API服务端点</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">openstack</span> endpoint create --region RegionOne compute public http://controller:<span class="number">8774</span>/v<span class="number">2</span>.<span class="number">1</span>openstack endpoint create --region RegionOne compute internal http://controller:<span class="number">8774</span>/v<span class="number">2</span>.<span class="number">1</span>openstack endpoint create --region RegionOne compute admin http://controller:<span class="number">8774</span>/v<span class="number">2</span>.<span class="number">1</span>openstack endpoint list</span><br></pre></td></tr></table></figure>

<h2 id="3、nova相关软件安装与配置"><a href="#3、nova相关软件安装与配置" class="headerlink" title="3、nova相关软件安装与配置"></a>3、nova相关软件安装与配置</h2><h3 id="（1）安装nova相关软件"><a href="#（1）安装nova相关软件" class="headerlink" title="（1）安装nova相关软件"></a>（1）安装nova相关软件</h3><p>dnf install openstack-nova-api openstack-nova-conductor openstack-nova-novncproxy openstack-nova-scheduler -y</p>
<h3 id="（2）配置文件修改-2"><a href="#（2）配置文件修改-2" class="headerlink" title="（2）配置文件修改"></a>（2）配置文件修改</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>nova/nova.conf&#123;,.bak&#125;</span><br><span class="line"><span class="keyword">grep</span> -Ev <span class="string">&#x27;^$|#&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.conf.bak &gt; /</span>etc<span class="regexp">/nova/</span>nova.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\firewall_driver = nova.virt.firewall.NoopFirewallDriver&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\use_neutron = true&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\my_ip = 10.1.1.100&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\transport_url = rabbit://openstack:111111@controller&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\enabled_apis = osapi_compute,metadata&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[api\]/a\auth_strategy = keystone&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[api_database\]/a\connection = mysql+pymysql://nova:111111@controller/nova_api&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[database\]/a\connection = mysql+pymysql://nova:111111@controller/nova&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[placement_database\]/a\connection = mysql+pymysql://placement:111111@controller/placement&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\password = 111111&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\username = nova&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\project_name = service&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\user_domain_name = Default&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\project_domain_name = Default&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\auth_type = password&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\memcached_servers = controller:11211&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\auth_url = http://controller:5000/v3&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[vnc\]/a\server_proxyclient_address = $my_ip&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[vnc\]/a\server_listen = $my_ip&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[vnc\]/a\enabled = true&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[glance\]/a\api_servers = http://controller:9292&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[oslo_concurrency\]/a\lock_path = /var/lib/nova/tmp&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\password = 111111&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\username = placement&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\auth_url = http://controller:5000/v3&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\user_domain_name = Default&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\auth_type = password&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\project_name = service&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\project_domain_name = Default&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[placement\]/a\region_name = RegionOne&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[scheduler\]/a\discover_hosts_in_cells_interval = 300&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br></pre></td></tr></table></figure>

<h3 id="（3）同步并创建相关数据库（注意顺序）"><a href="#（3）同步并创建相关数据库（注意顺序）" class="headerlink" title="（3）同步并创建相关数据库（注意顺序）"></a>（3）同步并创建相关数据库（注意顺序）</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">（1）同步nova-api数据库</span><br><span class="line">su -s <span class="string">/bin/sh</span> -c <span class="string">&quot;nova-manage api_db sync&quot;</span> nova</span><br><span class="line"></span><br><span class="line">mysql -unova -p111111 -e <span class="string">&quot;use nova_api;show tables;&quot;</span></span><br><span class="line"></span><br><span class="line">（2）同步cell0数据库</span><br><span class="line">su -s <span class="string">/bin/sh</span> -c <span class="string">&quot;nova-manage cell_v2 map_cell0&quot;</span> nova</span><br><span class="line"></span><br><span class="line">（3）创建cell1单元</span><br><span class="line">su -s <span class="string">/bin/sh</span> -c <span class="string">&quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot;</span> nova</span><br><span class="line"></span><br><span class="line">可以忽略输出的warning信息</span><br><span class="line">[root@controller ~]<span class="comment"># su -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; nova</span></span><br><span class="line"><span class="params">--transport-url</span> not provided in the <span class="keyword">command</span> line, using the value [DEFAULT]<span class="string">/transport_url</span> from the configuration file</span><br><span class="line"><span class="params">--database_connection</span> not provided in the <span class="keyword">command</span> line, using the value [database]<span class="string">/connection</span> from the configuration file</span><br><span class="line">55f5aa33-bb10-4965-8200-a1277413b824</span><br><span class="line"></span><br><span class="line">（4）初始化同步nova数据库</span><br><span class="line">su -s <span class="string">/bin/sh</span> -c <span class="string">&quot;nova-manage db sync&quot;</span> nova</span><br><span class="line"></span><br><span class="line">（5）验证nova_cell0和cell1是否添加成功</span><br><span class="line">[root@controller ~]<span class="comment"># su -s /bin/sh -c &quot;nova-manage cell_v2 list_cells&quot; nova</span></span><br><span class="line">+<span class="params">-------</span>+<span class="params">--------------------------------------</span>+<span class="params">------------------------------------</span>+<span class="params">-------------------------------------------------</span>+<span class="params">----------</span>+</span><br><span class="line">|  Name |                 UUID                 |           Transport URL            |               Database Connection               | Disabled |</span><br><span class="line">+<span class="params">-------</span>+<span class="params">--------------------------------------</span>+<span class="params">------------------------------------</span>+<span class="params">-------------------------------------------------</span>+<span class="params">----------</span>+</span><br><span class="line">| cell0 | 00000000-0000-0000-0000-000000000000 |               none:/               | mysql+pymysql:<span class="string">//nova</span>:****@controller/nova_cell0 |  False   |</span><br><span class="line">| cell1 | 55f5aa33-bb10-4965-8200-a1277413b824 | rabbit:<span class="string">//openstack</span>:****@controller |    mysql+pymysql:<span class="string">//nova</span>:****@controller/nova    |  False   |</span><br><span class="line">+<span class="params">-------</span>+<span class="params">--------------------------------------</span>+<span class="params">------------------------------------</span>+<span class="params">-------------------------------------------------</span>+<span class="params">----------</span>+</span><br><span class="line"></span><br><span class="line">（6）验证数据库</span><br><span class="line">mysql -unova -p111111 -e <span class="string">&quot;use nova_api;show tables;&quot;</span></span><br><span class="line">mysql -uplacement -p111111 -e <span class="string">&quot;use placement;show tables;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="（4）启动计算服并设置开机自启"><a href="#（4）启动计算服并设置开机自启" class="headerlink" title="（4）启动计算服并设置开机自启"></a>（4）启动计算服并设置开机自启</h3><p>systemctl start openstack-nova-api openstack-nova-scheduler openstack-nova-conductor openstack-nova-novncproxy<br>systemctl enable openstack-nova-api openstack-nova-scheduler openstack-nova-conductor openstack-nova-novncproxy</p>
<h3 id="（5）验证服务是否成功启动"><a href="#（5）验证服务是否成功启动" class="headerlink" title="（5）验证服务是否成功启动"></a>（5）验证服务是否成功启动</h3><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# nova service-list+--------------------------------------+----------------+------------+----------+---------+-------+----------------------------+-----------------+-------------+| <span class="type">Id</span>                                   | <span class="type">Binary</span>         | <span class="type">Host</span>       | <span class="type">Zone</span>     | <span class="type">Status</span>  | <span class="type">State</span> | <span class="type">Updated_at</span>                 | <span class="type">Disabled</span> Reason | <span class="type">Forced</span> down |<span class="type">+--------------------------------------+----------------+------------+----------+---------+-------+----------------------------+-----------------+-------------+| a34a501d</span><span class="number">-40</span>c1<span class="number">-4</span>f71<span class="number">-9e53</span><span class="number">-482e8</span>d1179d5 | <span class="type">nova</span>-conductor | <span class="type">controller</span> | <span class="type">internal</span> | <span class="type">enabled</span> | <span class="type">up</span>    | <span class="type">2021</span><span class="number">-06</span><span class="number">-01</span>T00:<span class="number">45</span>:<span class="number">29.000000</span> | <span class="type">-               | False</span>       |<span class="type">| 660c4170</span><span class="number">-2789</span><span class="number">-4</span>dab<span class="number">-96</span>dd<span class="number">-41</span>a5264b1ab2 | <span class="type">nova</span>-scheduler | <span class="type">controller</span> | <span class="type">internal</span> | <span class="type">enabled</span> | <span class="type">up</span>    | <span class="type">2021</span><span class="number">-06</span><span class="number">-01</span>T00:<span class="number">45</span>:<span class="number">31.000000</span> | <span class="type">-               | False</span>       |<span class="type">+--------------------------------------+----------------+------------+----------+---------+-------+----------------------------+-----------------+-------------+ [root</span>@controller ~]# netstat -lntup | <span class="type">grep</span> <span class="number">6080</span>tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">6080</span>            <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:*               LISTEN      <span class="number">2910</span>/python3[root@controller ~]# systemctl list-unit-files |<span class="type">grep</span> openstack-nova* |<span class="type">grep</span> enabledopenstack-nova-api.service             enabled  openstack-nova-conductor.service       enabled  openstack-nova-novncproxy.service      enabled  openstack-nova-scheduler.service       enabled  </span><br></pre></td></tr></table></figure>

<p>启动了4个服务，为什么只看到2个服务呢？</p>
<p>这是因为nova service-list这个命令是发给openstack-nova-api的，由openstack-nova-api服务返回响应结果，若nova-api服务关闭了，openstack-nova-scheduler和openstack-nova-conductor两个服务便无法启动；而查看openstack-nova-novncproxy服务是启动成功，是通过端口查看的，netstat -lntup | grep 6080，查看进程ps -ef | grep 上条命令得到的进程号。</p>
<p>启动novncproxy服务后，便可以通过Web访问<a href="http://10.0.0.11:6080/">http://10.0.0.11:6080</a> ，来进入noVNC页面，只是还没有连接云主机</p>
<p>至此，控制节点Nova服务安装完成</p>
<h1 id="七、计算节点-Nova计算服务组件"><a href="#七、计算节点-Nova计算服务组件" class="headerlink" title="七、计算节点-Nova计算服务组件"></a>七、计算节点-Nova计算服务组件</h1><h2 id="1、nova相关软件安装与配置"><a href="#1、nova相关软件安装与配置" class="headerlink" title="1、nova相关软件安装与配置"></a>1、nova相关软件安装与配置</h2><h3 id="（1）安装nova相关软件-1"><a href="#（1）安装nova相关软件-1" class="headerlink" title="（1）安装nova相关软件"></a>（1）安装nova相关软件</h3><p><code>dnf install openstack-nova-compute -y</code></p>
<h3 id="（2）配置文件修改-3"><a href="#（2）配置文件修改-3" class="headerlink" title="（2）配置文件修改"></a>（2）配置文件修改</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>nova<span class="regexp">/nova.conf&#123;,.bak&#125;grep -Ev &#x27;^$|#&#x27; /</span>etc<span class="regexp">/nova/</span>nova.conf.bak &gt; <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[DEFAULT\]<span class="regexp">/a\firewall_driver = nova.virt.firewall.NoopFirewallDriver&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[DEFAULT\]/a\use_neutron = true&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[DEFAULT\]<span class="regexp">/a\my_ip = 10.0.0.31&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[DEFAULT\]/a\transport_url = rabbit://openstack:111111@controller&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[DEFAULT\]<span class="regexp">/a\enabled_apis = osapi_compute,metadata&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[api\]/a\auth_strategy = keystone&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[keystone_authtoken\]<span class="regexp">/a\password = 111111&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\username = nova&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[keystone_authtoken\]<span class="regexp">/a\project_name = service&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\user_domain_name = Default&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[keystone_authtoken\]<span class="regexp">/a\project_domain_name = Default&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\auth_type = password&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[keystone_authtoken\]<span class="regexp">/a\memcached_servers = controller:11211&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\auth_url = http://controller:5000/v3&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[vnc\]<span class="regexp">/a\novncproxy_base_url =  http:/</span><span class="regexp">/controller:6080/</span>vnc_auto.html<span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[vnc\]/</span>a\server_proxyclient_address = <span class="variable">$my_ip</span><span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[vnc\]/</span>a\server_listen = <span class="number">0.0</span>.<span class="number">0.0</span><span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[vnc\]/</span>a\enabled = true<span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[glance\]/</span>a\api_servers = http:<span class="regexp">//</span>controller:<span class="number">9292</span><span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[oslo_concurrency\]/</span>a\lock_path = <span class="regexp">/var/</span>lib<span class="regexp">/nova/</span>tmp<span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[placement\]/</span>a\password = <span class="number">111111</span><span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[placement\]/</span>a\username = placement<span class="string">&#x27; /etc/nova/nova.confsed -i &#x27;</span><span class="regexp">/\[placement\]/</span>a\auth_url = http:<span class="regexp">//</span>controller:<span class="number">5000</span><span class="regexp">/v3&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[placement\]/a\user_domain_name = Default&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[placement\]<span class="regexp">/a\auth_type = password&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[placement\]/a\project_name = service&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[placement\]<span class="regexp">/a\project_domain_name = Default&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[placement\]/a\region_name = RegionOne&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.conf# 确定您的计算节点是否支持虚拟机的硬件加速，执行# egrep -c &#x27;(vmx|svm)&#x27; /</span>proc<span class="regexp">/cpuinfo ,返回值大于0，则支持;否则需要使用qemused -i &#x27;/</span>\[libvirt\]<span class="regexp">/a\virt_type = qemu&#x27; /</span>etc<span class="regexp">/nova/</span>nova.conf<span class="comment"># 在安装完成后注意修改：novncproxy_base_url为IP地址，IP地址为供应商地址，当除了管理网以外有多个IP地址时，选择合适的作为外部访问地址。sed -i &#x27;s/novncproxy_base_url =  http:\/\/controller:6080\/vnc_auto.html\/novncproxy_base_url =  http:\/\/192.168.0.11:6080\/vnc_auto.html/g&#x27; /etc/nova/nova.conf</span></span><br></pre></td></tr></table></figure>

<h3 id="（3）启动计算服务并配置为开机自启"><a href="#（3）启动计算服务并配置为开机自启" class="headerlink" title="（3）启动计算服务并配置为开机自启"></a>（3）启动计算服务并配置为开机自启</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># 启动nova服务和后期管理虚机的libvirt服务并设为开机自启systemctl start libvirtd openstack-nova-compute &amp;&amp; systemctl enable libvirtd openstack-nova-computesystemctl status libvirtd.service openstack-nova-compute.service# 出现异常检查：<span class="regexp">/var/</span>log<span class="regexp">/nova/</span>nova-compute.log。</span><br></pre></td></tr></table></figure>

<h3 id="（4）计算节点同步及验证【controller节点】"><a href="#（4）计算节点同步及验证【controller节点】" class="headerlink" title="（4）计算节点同步及验证【controller节点】"></a>（4）计算节点同步及验证【controller节点】</h3><p><strong>控制节点查看nova-compute服务</strong></p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# openstack <span class="built_in">compute</span> service list --service nova-<span class="built_in">compute</span>+----+--------------+-----------+------+---------+-------+----------------------------+| <span class="type">ID</span> | <span class="type">Binary</span>       | <span class="type">Host</span>      | <span class="type">Zone</span> | <span class="type">Status</span>  | <span class="type">State</span> | <span class="type">Updated</span> At                 |<span class="type">+----+--------------+-----------+------+---------+-------+----------------------------+|  7</span> | <span class="type">nova</span>-<span class="built_in">compute</span> | <span class="type">compute01</span> | <span class="type">nova</span> | <span class="type">enabled</span> | <span class="type">up</span>    | <span class="type">2021</span><span class="number">-06</span><span class="number">-01</span>T01:<span class="number">37</span>:<span class="number">54.000000</span> |<span class="type">+----+--------------+-----------+------+---------+-------+----------------------------+</span></span><br></pre></td></tr></table></figure>

<p><strong>发现计算节点主机</strong></p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">[root@controller ~]# su -s <span class="regexp">/bin/</span>sh -c <span class="string">&quot;nova-manage cell_v2 discover_hosts --verbose&quot;</span> novaFound <span class="number">2</span> cell mappings.Skipping cell0 since it does not contain hosts.Getting computes <span class="keyword">from</span> cell <span class="string">&#x27;cell1&#x27;</span>: <span class="number">55</span>f5aa33-bb10-<span class="number">4965</span>-<span class="number">8200</span>-a1277413b824Found <span class="number">0</span> unmapped computes in cell: <span class="number">55</span>f5aa33-bb10-<span class="number">4965</span>-<span class="number">8200</span>-a1277413b824以后添加新的计算节点时，必须在控制器节点上运行”su -s <span class="regexp">/bin/</span>sh -c <span class="string">&quot;nova-manage cell_v2 discover_hosts --verbose&quot;</span> nova“以注册这些新的计算节点。</span><br></pre></td></tr></table></figure>

<p><strong>设置适当的发现时间间隔（可选）</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">前面在<span class="regexp">/etc/</span>nova/nova.conf中配置的<span class="string">&#x27;discover_hosts_in_cells_interval = 300&#x27;</span>,即新节点自动注册的任务[scheduler]discover_hosts_in_cells_interval = <span class="number">300</span></span><br></pre></td></tr></table></figure>

<p><strong>验证整个计算服务nova</strong></p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">[root<span class="meta">@controller</span> ~]<span class="comment"># openstack compute service list</span></span><br><span class="line">+----+----------------+------------+----------+---------+-------+----------------------------+</span><br><span class="line">|<span class="string"> ID </span>|<span class="string"> Binary         </span>|<span class="string"> Host       </span>|<span class="string"> Zone     </span>|<span class="string"> Status  </span>|<span class="string"> State </span>|<span class="string"> Updated At                 </span>|</span><br><span class="line">+----+----------------+------------+----------+---------+-------+----------------------------+</span><br><span class="line">|<span class="string">  3 </span>|<span class="string"> nova-conductor </span>|<span class="string"> controller </span>|<span class="string"> internal </span>|<span class="string"> enabled </span>|<span class="string"> up    </span>|<span class="string"> 2021-06-01T01:45:50.000000 </span>|</span><br><span class="line">|<span class="string">  5 </span>|<span class="string"> nova-scheduler </span>|<span class="string"> controller </span>|<span class="string"> internal </span>|<span class="string"> enabled </span>|<span class="string"> up    </span>|<span class="string"> 2021-06-01T01:45:52.000000 </span>|</span><br><span class="line">|<span class="string">  7 </span>|<span class="string"> nova-compute   </span>|<span class="string"> compute01  </span>|<span class="string"> nova     </span>|<span class="string"> enabled </span>|<span class="string"> up    </span>|<span class="string"> 2021-06-01T01:45:54.000000 </span>|</span><br><span class="line">+----+----------------+------------+----------+---------+-------+----------------------------+</span><br><span class="line">[root<span class="meta">@controller</span> ~]<span class="comment"># openstack catalog list</span></span><br><span class="line">+-----------+-----------+-----------------------------------------+</span><br><span class="line">|<span class="string"> Name      </span>|<span class="string"> Type      </span>|<span class="string"> Endpoints                               </span>|</span><br><span class="line">+-----------+-----------+-----------------------------------------+</span><br><span class="line">|<span class="string"> keystone  </span>|<span class="string"> identity  </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   admin: http://controller:5000/v3/     </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   internal: http://controller:5000/v3/  </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   public: http://controller:5000/v3/    </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">                                         </span>|</span><br><span class="line">|<span class="string"> glance    </span>|<span class="string"> image     </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   public: http://controller:9292        </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   internal: http://controller:9292      </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   admin: http://controller:9292         </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">                                         </span>|</span><br><span class="line">|<span class="string"> nova      </span>|<span class="string"> compute   </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   internal: http://controller:8774/v2.1 </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   admin: http://controller:8774/v2.1    </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   public: http://controller:8774/v2.1   </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">                                         </span>|</span><br><span class="line">|<span class="string"> placement </span>|<span class="string"> placement </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   internal: http://controller:8778      </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   admin: http://controller:8778         </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string"> RegionOne                               </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">   public: http://controller:8778        </span>|</span><br><span class="line">|<span class="string">           </span>|<span class="string">           </span>|<span class="string">                                         </span>|</span><br><span class="line">+-----------+-----------+-----------------------------------------+</span><br><span class="line">[root<span class="meta">@controller</span> ~]<span class="comment"># openstack image list</span></span><br><span class="line">+--------------------------------------+--------------+--------+</span><br><span class="line">|<span class="string"> ID                                   </span>|<span class="string"> Name         </span>|<span class="string"> Status </span>|</span><br><span class="line">+--------------------------------------+--------------+--------+</span><br><span class="line">|<span class="string"> 0d2909eb-8e7f-4fdf-8a1f-8dba06b12c1c </span>|<span class="string"> cirros-0.3.5 </span>|<span class="string"> active </span>|</span><br><span class="line">|<span class="string"> dd460075-c351-4213-95ed-72de7ccba047 </span>|<span class="string"> cirros-0.4.0 </span>|<span class="string"> active </span>|</span><br><span class="line">|<span class="string"> 107cf0e4-b74a-4309-9b58-96d4c0cfd2ae </span>|<span class="string"> cirros-0.5.0 </span>|<span class="string"> active </span>|</span><br><span class="line">+--------------------------------------+--------------+--------+</span><br><span class="line">[root<span class="meta">@controller</span> nova]<span class="comment"># nova-status upgrade check</span></span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Upgrade Check Results                     </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Cells v2                           </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Placement API                      </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Ironic Flavor Migration            </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Cinder API                         </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Policy Scope-based Defaults        </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Policy File JSON to YAML Migration </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|<span class="string"> Check: Older than N-1 computes            </span>|</span><br><span class="line">|<span class="string"> Result: Success                           </span>|</span><br><span class="line">|<span class="string"> Details: None                             </span>|</span><br><span class="line">+-------------------------------------------+</span><br></pre></td></tr></table></figure>

<h1 id="八、控制节点-Neutron网络服务组件"><a href="#八、控制节点-Neutron网络服务组件" class="headerlink" title="八、控制节点-Neutron网络服务组件"></a>八、控制节点-Neutron网络服务组件</h1><h2 id="1、创建neutron数据库并授权"><a href="#1、创建neutron数据库并授权" class="headerlink" title="1、创建neutron数据库并授权"></a>1、创建neutron数据库并授权</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># 创建数据库并授权，密码设置为<span class="number">111111</span>mysql -uroot -prootCREATE <span class="keyword">DATABASE</span> neutron;<span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> neutron.* <span class="keyword">TO</span> <span class="string">&#x27;neutron&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;<span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> neutron.* <span class="keyword">TO</span> <span class="string">&#x27;neutron&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;111111&#x27;</span>;flush <span class="keyword">privileges</span>;<span class="keyword">show</span> databases;<span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.<span class="keyword">user</span>;<span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<h2 id="2、创建neutron服务凭据"><a href="#2、创建neutron服务凭据" class="headerlink" title="2、创建neutron服务凭据"></a>2、创建neutron服务凭据</h2><h3 id="（1）创建neutron用户并设置密码为111111"><a href="#（1）创建neutron用户并设置密码为111111" class="headerlink" title="（1）创建neutron用户并设置密码为111111"></a>（1）创建neutron用户并设置密码为111111</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --<span class="attr">password=</span><span class="number">111111</span> neutronopenstack <span class="keyword">user</span> <span class="title">list</span></span><br></pre></td></tr></table></figure>

<h3 id="（2）将neutron授予admin角色，并添加到service项目"><a href="#（2）将neutron授予admin角色，并添加到service项目" class="headerlink" title="（2）将neutron授予admin角色，并添加到service项目"></a>（2）将neutron授予admin角色，并添加到service项目</h3><p><code>openstack role add --project service --user neutron admin</code></p>
<h3 id="（3）创建neutron服务实体"><a href="#（3）创建neutron服务实体" class="headerlink" title="（3）创建neutron服务实体"></a>（3）创建neutron服务实体</h3><p><code>openstack service create --name neutron --description &quot;OpenStack Networking&quot; network</code><br><code>openstack service list</code></p>
<h3 id="（4）创建neutron网络服务的API端点（endpoint）"><a href="#（4）创建neutron网络服务的API端点（endpoint）" class="headerlink" title="（4）创建neutron网络服务的API端点（endpoint）"></a>（4）创建neutron网络服务的API端点（endpoint）</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne network public http:<span class="regexp">//</span>controller:<span class="number">9696</span>openstack endpoint create --region RegionOne network internal http:<span class="regexp">//</span>controller:<span class="number">9696</span>openstack endpoint create --region RegionOne network admin http:<span class="regexp">//</span>controller:<span class="number">9696</span>openstack endpoint list</span><br></pre></td></tr></table></figure>

<h2 id="3、neutron相关软件安装与配置"><a href="#3、neutron相关软件安装与配置" class="headerlink" title="3、neutron相关软件安装与配置"></a>3、neutron相关软件安装与配置</h2><p><strong>做好网络名称的规划</strong></p>
<table>
<thead>
<tr>
<th>网络类型</th>
<th>网络名</th>
</tr>
</thead>
<tbody><tr>
<td>供应商网络名称provider networks name：</td>
<td></td>
</tr>
<tr>
<td>供应商网络子网1名称provider networks subnet1 name：</td>
<td></td>
</tr>
<tr>
<td>供应商网络子网2名称provider networks subnet2 name：</td>
<td></td>
</tr>
<tr>
<td>自服务私有网络名称self-service networks name：</td>
<td></td>
</tr>
<tr>
<td>自服务私有网络子网1名称self-service networks subnet1 name：</td>
<td></td>
</tr>
<tr>
<td>自服务私有网络子网2名称self-service networks subnet2 name：</td>
<td></td>
</tr>
<tr>
<td>路由名称router name：</td>
<td></td>
</tr>
</tbody></table>
<h3 id="（1）安装neutron相关软件"><a href="#（1）安装neutron相关软件" class="headerlink" title="（1）安装neutron相关软件"></a>（1）安装neutron相关软件</h3><p>dnf install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables -y</p>
<h3 id="（2）配置网络"><a href="#（2）配置网络" class="headerlink" title="（2）配置网络"></a>（2）配置网络</h3><p>公有网络和私有网络配置任意选择一种即可,下面的操作是两种网络都进行配置选择。</p>
<h4 id="1-公有网络：Provider-networks"><a href="#1-公有网络：Provider-networks" class="headerlink" title="1.公有网络：Provider networks"></a>1.公有网络：Provider networks</h4><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line"># 配置neutron server的配置文件neutron.confcp -a /etc/neutron/neutron.conf&#123;,.bak&#125;grep -Ev &#x27;^$|#&#x27; /etc/neutron/neutron.conf.bak &gt; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>database<span class="symbol">\]</span>/a<span class="symbol">\c</span>onnection = mysql+pymysql://neutron:111111@controller/neutron&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\n</span>otify_nova_on_port_data_changes = true&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\n</span>otify_nova_on_port_status_changes = true&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\a</span>uth_strategy = keystone&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\t</span>ransport_url = rabbit://openstack:111111@controller&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\s</span>ervice_plugins = &#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\c</span>ore_plugin = ml2&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\p</span>assword = 111111&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\u</span>sername = neutron&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\p</span>roject_name = service&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\u</span>ser_domain_name = default&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\p</span>roject_domain_name = default&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\a</span>uth_type = password&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\m</span>emcached_servers = controller:11211&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\a</span>uth_url = http://controller:5000&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>keystone_authtoken<span class="symbol">\]</span>/a<span class="symbol">\w</span>ww_authenticate_uri = http://controller:5000&#x27; /etc/neutron/neutron.confsed -i &#x27;/<span class="symbol">\[</span>oslo_concurrency<span class="symbol">\]</span>/a<span class="symbol">\l</span>ock_path = /var/lib/neutron/tmp&#x27; /etc/neutron/neutron.confcat &gt;&gt;/etc/neutron/neutron.conf&lt;&lt;EOF[nova]auth_url = http://controller:5000auth_type = passwordproject_domain_name = defaultuser_domain_name = defaultregion_name = RegionOneproject_name = serviceusername = novapassword = 111111EOF# 配置模块化层2（ML2）插件# ML2插件使用Linux桥接器机制为实例构建第2层（桥接和交换）虚拟网络基础结构cp -a /etc/neutron/plugins/ml2/ml2_conf.ini&#123;,.bak&#125;cat &gt; /etc/neutron/plugins/ml2/ml2_conf.ini&lt;&lt;EOF[ml2]type_drivers = flat,vlantenant_network_types =mechanism_drivers = linuxbridgeextension_drivers = port_security[ml2_type_flat]flat_networks = provider[ml2_type_vlan]network_vlan_ranges = provider[securitygroup]enable_ipset = trueEOF# 配置网桥代理# Linux网桥代理为实例构建第2层（桥接和交换）虚拟网络基础结构并处理安全组cp -a /etc/neutron/plugins/ml2/linuxbridge_agent.ini&#123;,.bak&#125;cat &gt; /etc/neutron/plugins/ml2/linuxbridge_agent.ini &lt;&lt; EOF[linux_bridge]physical_interface_mappings = provider:ens37[vxlan]enable_vxlan = false[securitygroup]enable_security_group = truefirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriverEOF# 要启用网络桥接器支持，通常需要加载加载br_netfilter内核模块echo net.bridge.bridge-nf-call-iptables = 1 &gt;&gt; /etc/sysctl.confecho net.bridge.bridge-nf-call-ip6tables = 1 &gt;&gt; /etc/sysctl.confmodprobe br_netfiltersysctl -p# 配置DHCP代理cp -a /etc/neutron/dhcp_agent.ini&#123;,.bak&#125;grep -Ev &#x27;^$|#&#x27; /etc/neutron/dhcp_agent.ini.bak &gt; /etc/neutron/dhcp_agent.inised -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\e</span>nable_isolated_metadata = true&#x27; /etc/neutron/dhcp_agent.inised -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\d</span>hcp_driver = neutron.agent.linux.dhcp.Dnsmasq&#x27; /etc/neutron/dhcp_agent.inised -i &#x27;/<span class="symbol">\[</span>DEFAULT<span class="symbol">\]</span>/a<span class="symbol">\i</span>nterface_driver = linuxbridge&#x27; /etc/neutron/dhcp_agent.ini# 至此公有网络的配置完成</span><br></pre></td></tr></table></figure>

<h4 id="2-私有网络：self-service-networks"><a href="#2-私有网络：self-service-networks" class="headerlink" title="2.私有网络：self-service networks"></a>2.私有网络：self-service networks</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">（<span class="number">1</span>）配置neutron server的配置文件neutron.conf</span><br><span class="line">vim <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">在之前创建provider网络时已经配置过，但self网络也有特定的配置(对应修改如下配置)</span><br><span class="line">[<span class="keyword">DEFAULT</span>]</span><br><span class="line">service_plugins = router</span><br><span class="line">allow_overlapping_ips = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）配置模块化层<span class="number">2</span>（ML2）插件</span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/m</span>l2/ml2_conf.ini</span><br><span class="line">在之前创建provider网络时已经配置过，但self网络也有特定的配置(对应修改如下配置)</span><br><span class="line">[ml2]</span><br><span class="line">type_drivers = flat,vlan,vxlan</span><br><span class="line">tenant_network_types = vxlan</span><br><span class="line">mechanism_drivers = linuxbridge,l2population</span><br><span class="line">extension_drivers = port_security</span><br><span class="line"></span><br><span class="line">[ml2_type_flat]</span><br><span class="line">flat_networks = provider</span><br><span class="line"></span><br><span class="line">[ml2_type_vlan]</span><br><span class="line">network_vlan_ranges = provider</span><br><span class="line"></span><br><span class="line">[ml2_type_vxlan]</span><br><span class="line">vni_ranges = <span class="number">1</span>:<span class="number">1000</span></span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_ipset = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">（<span class="number">3</span>）配置Linux网桥代理</span><br><span class="line">vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/m</span>l2/linuxbridge_agent.ini</span><br><span class="line">Linux网桥代理为实例构建第<span class="number">2</span>层（桥接和交换）虚拟网络基础结构并处理安全组。</span><br><span class="line">在之前创建provider网络时已经配置过，但self网络也有特定的配置(对应修改如下配置)</span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings = provider:ens37</span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = <span class="keyword">true</span></span><br><span class="line">local_ip = <span class="number">10.0</span>.<span class="number">0.11</span></span><br><span class="line">l2_population = <span class="keyword">true</span></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = <span class="keyword">true</span></span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"></span><br><span class="line"># 配置加载br_netfilter内核模块，公有网络配置时已做过</span><br><span class="line"></span><br><span class="line">（<span class="number">4</span>）配置第<span class="number">3</span>层L3代理</span><br><span class="line">cp <span class="regexp">/etc/</span>neutron/l3_agent.ini&#123;,.bak&#125;</span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\interface_driver = linuxbridge&#x27;</span> <span class="regexp">/etc/</span>neutron/l3_agent.ini</span><br><span class="line"></span><br><span class="line">（<span class="number">5</span>）配置DHCP代理</span><br><span class="line">DHCP代理为虚拟网络提供DHCP服务。</span><br><span class="line"><span class="regexp">/etc/</span>neutron/dhcp_agent.ini</span><br><span class="line">在之前创建provider网络时已经配置过，此处self网络的配置与其相同。</span><br></pre></td></tr></table></figure>

<h2 id="4、配置元数据代理"><a href="#4、配置元数据代理" class="headerlink" title="4、配置元数据代理"></a>4、配置元数据代理</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>neutron<span class="regexp">/metadata_agent.ini&#123;,.bak&#125;grep -Ev &#x27;^$|#&#x27; /</span>etc<span class="regexp">/neutron/m</span>etadata_agent.ini.bak &gt; <span class="regexp">/etc/</span>neutron<span class="regexp">/metadata_agent.ini# 此处将：METADATA_SECRET的值设置为neutrosed -i &#x27;/</span>\[<span class="keyword">DEFAULT</span>\]<span class="regexp">/a\metadata_proxy_shared_secret = neutron&#x27; /</span>etc<span class="regexp">/neutron/m</span>etadata_agent.inised -i <span class="string">&#x27;/\[DEFAULT\]/a\nova_metadata_host = controller&#x27;</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/metadata_agent.inised -i &#x27;/</span>\[keystone_authtoken\]<span class="regexp">/a\memcached_servers = controller:11211&#x27; /</span>etc<span class="regexp">/neutron/m</span>etadata_agent.ini</span><br></pre></td></tr></table></figure>

<h2 id="5、为Nova配置网络服务"><a href="#5、为Nova配置网络服务" class="headerlink" title="5、为Nova配置网络服务"></a>5、为Nova配置网络服务</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\metadata_proxy_shared_secret = neutron&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[neutron\]<span class="regexp">/a\service_metadata_proxy = true&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[neutron\]/a\password = 111111&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[neutron\]<span class="regexp">/a\username = neutron&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[neutron\]/a\project_name = service&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[neutron\]<span class="regexp">/a\region_name = RegionOne&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[neutron\]/a\user_domain_name = default&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[neutron\]<span class="regexp">/a\project_domain_name = default&#x27; /</span>etc<span class="regexp">/nova/</span>nova.confsed -i <span class="string">&#x27;/\[neutron\]/a\auth_type = password&#x27;</span> <span class="regexp">/etc/</span>nova<span class="regexp">/nova.confsed -i &#x27;/</span>\[neutron\]<span class="regexp">/a\auth_url = http:/</span><span class="regexp">/controller:5000&#x27; /</span>etc<span class="regexp">/nova/</span>nova.conf</span><br></pre></td></tr></table></figure>

<h2 id="6、初始数据库并启动服务"><a href="#6、初始数据库并启动服务" class="headerlink" title="6、初始数据库并启动服务"></a>6、初始数据库并启动服务</h2><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>.初始化安装网络插件</span><br><span class="line">创建网络插件的软连接，初始化网络的脚本插件会用到/etc/neutron/plugin.ini，需要使用ML2的插件进行提供</span><br><span class="line">ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.填充数据库</span><br><span class="line">su -s /bin/sh -c <span class="string">&quot;neutron-db-manage --config-file /etc/neutron/neutron.conf \</span></span><br><span class="line"><span class="string">  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot;</span> neutron</span><br><span class="line">最后输出OK。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.重新启动Compute API服务</span><br><span class="line">systemctl restart openstack-nova-api.<span class="keyword">service</span></span><br><span class="line">systemctl status openstack-nova-api.<span class="keyword">service</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>.启动neutron网络服务并设置开机启动</span><br><span class="line">systemctl start neutron-server.<span class="keyword">service</span> neutron-linuxbridge-agent.<span class="keyword">service</span> neutron-dhcp-agent.<span class="keyword">service</span>   neutron-metadata-agent.<span class="keyword">service</span></span><br><span class="line">systemctl enable neutron-server.<span class="keyword">service</span> neutron-linuxbridge-agent.<span class="keyword">service</span> neutron-dhcp-agent.<span class="keyword">service</span>   neutron-metadata-agent.<span class="keyword">service</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="keyword">list</span>-unit-files |grep neutron* |grep enabled</span><br><span class="line">systemctl status neutron-server.<span class="keyword">service</span> neutron-linuxbridge-agent.<span class="keyword">service</span> neutron-dhcp-agent.<span class="keyword">service</span>   neutron-metadata-agent.<span class="keyword">service</span></span><br><span class="line"></span><br><span class="line">如果在二配置网络选项时，使用选项<span class="number">2</span>，还应再启动第<span class="number">3</span>层服务</span><br><span class="line">systemctl start neutron-l3-agent.<span class="keyword">service</span></span><br><span class="line">systemctl enable neutron-l3-agent.<span class="keyword">service</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>.查看网络代理</span><br><span class="line">openstack network <span class="keyword">list</span></span><br><span class="line">openstack network agent <span class="keyword">list</span></span><br></pre></td></tr></table></figure>

<h2 id="7、创建网络选项"><a href="#7、创建网络选项" class="headerlink" title="7、创建网络选项"></a>7、创建网络选项</h2><h3 id="（1）公有网络：Provider-networks"><a href="#（1）公有网络：Provider-networks" class="headerlink" title="（1）公有网络：Provider networks"></a>（1）公有网络：Provider networks</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># 创建网络provider</span><br><span class="line">openstack network create --share --external --provider-physical-network provider --provider-network-type flat providernet</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">--share 指明所有项目都可以使用这个网络，否则只有创建者能使用 </span><br><span class="line"></span><br><span class="line">--external 指明是外部网络 </span><br><span class="line"></span><br><span class="line">--provider-physical-network provider  指明物理网络的提供者，与下面neutron的配置文件对应，其中provider是标签，可以更改为其他，但是2个地方必须要统一。</span><br><span class="line"><span class="section">vim /etc/neutron/plugins/ml2/ml2_conf.ini</span></span><br><span class="line"><span class="section">-----------------------------</span></span><br><span class="line"><span class="meta">[ml2_type_flat]</span></span><br><span class="line"><span class="section">flat_networks = provider</span></span><br><span class="line"><span class="section">-----------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="section">vim /etc/neutron/plugins/ml2/linuxbridge_agent.ini</span></span><br><span class="line"><span class="section">-----------------------------</span></span><br><span class="line"><span class="meta">[linux_bridge]</span></span><br><span class="line"><span class="section">physical_interface_mappings = provider:ens37</span></span><br><span class="line"><span class="section">-----------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="code"> --provider-network-type flat  指明这里创建的网络是flat类型，即实例连接到此网络时和物理网络是在同一个网段，无vlan等功能。</span></span><br><span class="line">vm-network 网络名称</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建子网：subnet</span><br><span class="line">openstack subnet create --network providernet --allocation-pool start=192.168.1.160,end=192.168.1.180 --dns-nameserver 1.1.1.1 --gateway 192.168.1.1 --subnet-range 192.168.1.0/24 providernet-subnet1</span><br><span class="line"></span><br><span class="line"># 同一个父网络下也支持创建多个子网络。</span><br><span class="line">#openstack subnet create --network provider --no-dhcp --allocation-pool start=192.168.1.210,end=192.168.1.220 --dns-nameserver 4.4.4.4 --gateway 192.168.1.1 --subnet-range 192.168.1.0/24 provider-subnet2</span><br><span class="line"></span><br><span class="line">#openstack subnet create --network provider --dhcp --subnet-range 192.168.1.0/24 provider-subnet3</span><br></pre></td></tr></table></figure>

<h3 id="（2）私有网络：Self-service-networks"><a href="#（2）私有网络：Self-service-networks" class="headerlink" title="（2）私有网络：Self-service networks"></a>（2）私有网络：Self-service networks</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">检查确认网络配置</span><br><span class="line"><span class="section">#  cat /etc/neutron/plugins/ml2/ml2_conf.ini</span></span><br><span class="line"><span class="section">---------------------------------------------------------</span></span><br><span class="line"><span class="meta">[ml2]</span></span><br><span class="line">type<span class="emphasis">_drivers = flat,vlan,vxlan</span></span><br><span class="line"><span class="emphasis">tenant_network_types = vxlan</span></span><br><span class="line"><span class="emphasis">mechanism_drivers = linuxbridge,l2population</span></span><br><span class="line"><span class="emphasis">extension_drivers = port_</span>security</span><br><span class="line"></span><br><span class="line"><span class="meta">[ml2_type_flat]</span></span><br><span class="line">flat_networks = provider</span><br><span class="line"></span><br><span class="line"><span class="meta">[ml2_type_vlan]</span></span><br><span class="line">network_vlan_ranges = provider</span><br><span class="line"></span><br><span class="line"><span class="meta">[ml2_type_vxlan]</span></span><br><span class="line">vni_ranges = 1:1000</span><br><span class="line"></span><br><span class="line"><span class="meta">[securitygroup]</span></span><br><span class="line"><span class="section">enable_ipset = True</span></span><br><span class="line"><span class="section">---------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"># 创建网络</span><br><span class="line">openstack network create selfservicenet</span><br><span class="line"></span><br><span class="line"># 创建子网</span><br><span class="line">openstack subnet create --network selfservicenet --dns-nameserver 8.8.8.8 --gateway 172.16.1.1   --subnet-range 172.16.1.0/24 selfservicenet-subnet1</span><br><span class="line"></span><br><span class="line"># 创建路由,每个路由器均包含至少一个自助服务网络上的接口和提供商网络上的网关</span><br><span class="line">openstack router create router1</span><br><span class="line">openstack router add subnet router1 selfservicenet-subnet1</span><br><span class="line">openstack router set router1 --external-gateway providernet</span><br><span class="line">openstack port list --router router1</span><br><span class="line">ip netns</span><br></pre></td></tr></table></figure>

<h1 id="九、计算节点-Neutron网络服务组件"><a href="#九、计算节点-Neutron网络服务组件" class="headerlink" title="九、计算节点-Neutron网络服务组件"></a>九、计算节点-Neutron网络服务组件</h1><h2 id="1、安装相关软件"><a href="#1、安装相关软件" class="headerlink" title="1、安装相关软件"></a>1、安装相关软件</h2><p>dnf install -y openstack-neutron-linuxbridge ebtables ipset openstack-neutron openstack-neutron-ml2</p>
<h2 id="2、配置公共组件"><a href="#2、配置公共组件" class="headerlink" title="2、配置公共组件"></a>2、配置公共组件</h2><p>网络公共组件配置包括身份验证机制，消息队列和插件。</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cp -a <span class="regexp">/etc/</span>neutron/neutron.conf&#123;,.bak&#125;</span><br><span class="line"><span class="keyword">grep</span> -Ev <span class="string">&#x27;^$|#&#x27;</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/neutron.conf.bak &gt; /</span>etc<span class="regexp">/neutron/</span>neutron.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\transport_url = rabbit://openstack:111111@controller&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[DEFAULT\]/a\auth_strategy = keystone&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\password = 111111&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\username = neutron&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\project_name = service&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\user_domain_name = default&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\project_domain_name = default&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\auth_type = password&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\memcached_servers = controller:11211&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\auth_url = http://controller:5000&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[keystone_authtoken\]/a\www_authenticate_uri = http://controller:5000&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;/\[oslo_concurrency\]/a\lock_path = /var/lib/neutron/tmp&#x27;</span> <span class="regexp">/etc/</span>neutron/neutron.conf</span><br></pre></td></tr></table></figure>

<h2 id="3、配置网络选项"><a href="#3、配置网络选项" class="headerlink" title="3、配置网络选项"></a>3、配置网络选项</h2><p>公有网络和私有网络配置任意选择一种即可，但要与控制节点保持一致，这里仍然是两种网络都配置。</p>
<h3 id="（1）公有网络：Provider-networks-1"><a href="#（1）公有网络：Provider-networks-1" class="headerlink" title="（1）公有网络：Provider networks"></a>（1）公有网络：Provider networks</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">（<span class="number">1</span>）配置Linux网桥代理</span><br><span class="line">Linux网桥代理为实例构建第<span class="number">2</span>层（桥接和交换）虚拟网络基础结构并处理安全组。</span><br><span class="line"></span><br><span class="line">cp -a <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/m</span>l2/linuxbridge_agent.ini&#123;,.bak&#125;</span><br><span class="line"></span><br><span class="line">cat &gt; <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/m</span>l2/linuxbridge_agent.ini &lt;&lt;EOF</span><br><span class="line">[linux_bridge]</span><br><span class="line">physical_interface_mappings provider:ens37</span><br><span class="line"></span><br><span class="line">[vxlan]</span><br><span class="line">enable_vxlan = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_security_group = <span class="keyword">true</span></span><br><span class="line">firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line">EOF</span><br><span class="line">注：第一个选项physical_interface_mappings选项要配置计算节点自身的网卡名称provider:ens37</span><br><span class="line"></span><br><span class="line"># 加载br_netfilter内核模块。要启用网络桥接器支持，通常br_netfilter内核模块需要加载.</span><br><span class="line">echo net.bridge.bridge-nf-<span class="keyword">call</span>-iptables = <span class="number">1</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.conf</span><br><span class="line">echo net.bridge.bridge-nf-<span class="keyword">call</span>-ip6tables = <span class="number">1</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.conf</span><br><span class="line">modprobe br_netfilter</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<h3 id="（2）私有网络：Self-service-networks-1"><a href="#（2）私有网络：Self-service-networks-1" class="headerlink" title="（2）私有网络：Self-service networks"></a>（2）私有网络：Self-service networks</h3><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Linux网桥代理为实例构建第2层（桥接和交换）虚拟网络基础结构并处理安全组。</span></span><br><span class="line">配置为私有网络，需要修改/etc/neutron/plugins/ml2/linuxbridge_agent.ini配置</span><br><span class="line">[linux_bridge]</span><br><span class="line"><span class="attr">physical_interface_mappings</span> = provider:ens37</span><br><span class="line">[vxlan]</span><br><span class="line"><span class="attr">enable_vxlan</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">10.0</span>.<span class="number">0.31</span></span><br><span class="line"><span class="attr">l2_population</span> = <span class="literal">true</span></span><br><span class="line">[securitygroup]</span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br><span class="line">firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前面已经执行过br_netfilter内核模块加载（略）</span></span><br></pre></td></tr></table></figure>

<h2 id="4、计算节点-为Nova配置网络服务"><a href="#4、计算节点-为Nova配置网络服务" class="headerlink" title="4、计算节点:为Nova配置网络服务"></a>4、计算节点:为Nova配置网络服务</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\password = 111111&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\username = neutron&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\project_name = service&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\region_name = RegionOne&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\user_domain_name = default&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\project_domain_name = default&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\auth_type = password&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\url = http://controller:9696&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">sed -i <span class="string">&#x27;/\[neutron\]/a\auth_url = http://controller:5000&#x27;</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Nova服务</span></span><br><span class="line">systemctl restart openstack-nova-compute.service</span><br><span class="line">systemctl status openstack-nova-compute.service</span><br></pre></td></tr></table></figure>

<h2 id="5、启动Linux网桥代理，并配置开机自启"><a href="#5、启动Linux网桥代理，并配置开机自启" class="headerlink" title="5、启动Linux网桥代理，并配置开机自启"></a>5、启动Linux网桥代理，并配置开机自启</h2><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">systemctl</span> <span class="string">restart</span> <span class="string">neutron-linuxbridge-agent</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">enable</span> <span class="string">neutron-linuxbridge-agent</span>.<span class="string">service</span></span><br><span class="line"><span class="string">systemctl</span> <span class="built_in">list-unit-files</span> |<span class="string">grep</span> <span class="string">neutron</span>* |<span class="string">grep</span> <span class="string">enabled</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">status</span> <span class="string">neutron-linuxbridge-agent</span>.<span class="string">service</span></span><br></pre></td></tr></table></figure>

<h2 id="6、验证neutron服务【controller节点】"><a href="#6、验证neutron服务【controller节点】" class="headerlink" title="6、验证neutron服务【controller节点】"></a>6、验证neutron服务【controller节点】</h2><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看加载的网络插件,列出已加载的扩展，以验证该neutron-server过程是否成功启动</span></span><br><span class="line">openstack extension list --network</span><br><span class="line">neutron ext-list</span><br><span class="line">ip netns</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看网络代理列表</span></span><br><span class="line">[root<span class="meta">@controller</span> ~]<span class="comment"># openstack network agent list</span></span><br><span class="line">+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+</span><br><span class="line">|<span class="string"> ID                                   </span>|<span class="string"> Agent Type         </span>|<span class="string"> Host       </span>|<span class="string"> Availability Zone </span>|<span class="string"> Alive </span>|<span class="string"> State </span>|<span class="string"> Binary                    </span>|</span><br><span class="line">+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+</span><br><span class="line">|<span class="string"> 1fb6df9f-ef39-4ebc-9f3e-c45a997129a6 </span>|<span class="string"> Linux bridge agent </span>|<span class="string"> controller </span>|<span class="string"> None              </span>|<span class="string"> :-)   </span>|<span class="string"> UP    </span>|<span class="string"> neutron-linuxbridge-agent </span>|</span><br><span class="line">|<span class="string"> 732528ad-3d1d-4b7d-8772-bca9477906e4 </span>|<span class="string"> Metadata agent     </span>|<span class="string"> controller </span>|<span class="string"> None              </span>|<span class="string"> :-)   </span>|<span class="string"> UP    </span>|<span class="string"> neutron-metadata-agent    </span>|</span><br><span class="line">|<span class="string"> a5216309-5051-4104-af70-d000e29612c6 </span>|<span class="string"> Linux bridge agent </span>|<span class="string"> compute01  </span>|<span class="string"> None              </span>|<span class="string"> :-)   </span>|<span class="string"> UP    </span>|<span class="string"> neutron-linuxbridge-agent </span>|</span><br><span class="line">|<span class="string"> c54e85e6-3b5b-4463-a925-7a7471c92b69 </span>|<span class="string"> DHCP agent         </span>|<span class="string"> controller </span>|<span class="string"> nova              </span>|<span class="string"> :-)   </span>|<span class="string"> UP    </span>|<span class="string"> neutron-dhcp-agent        </span>|</span><br><span class="line">|<span class="string"> f1b8eef6-d688-4046-84ab-f67d3573a4a8 </span>|<span class="string"> L3 agent           </span>|<span class="string"> controller </span>|<span class="string"> nova              </span>|<span class="string"> :-)   </span>|<span class="string"> UP    </span>|<span class="string"> neutron-l3-agent          </span>|</span><br><span class="line">+--------------------------------------+--------------------+------------+-------------------+-------+-------+---------------------------+</span><br></pre></td></tr></table></figure>

<h1 id="十、安装与配置dashboard相关软件"><a href="#十、安装与配置dashboard相关软件" class="headerlink" title="十、安装与配置dashboard相关软件"></a>十、安装与配置dashboard相关软件</h1><h2 id="1、安装软件包"><a href="#1、安装软件包" class="headerlink" title="1、安装软件包"></a>1、安装软件包</h2><p><code>dnf install openstack-dashboard -y</code></p>
<h2 id="2、配置文件修改"><a href="#2、配置文件修改" class="headerlink" title="2、配置文件修改"></a>2、配置文件修改</h2><h3 id="（1）local-settings"><a href="#（1）local-settings" class="headerlink" title="（1）local_settings"></a>（1）local_settings</h3><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">cp -a /etc/openstack-dashboard/local_settings&#123;,.bak&#125;</span><br><span class="line">grep -Ev <span class="string">&#x27;^$|#&#x27;</span> /etc/openstack-dashboard/local_settings.bak &gt; /etc/openstack-dashboard/local_settings</span><br><span class="line"></span><br><span class="line"># 配置仪表盘在controller节点上使用openstack服务</span><br><span class="line">OPENSTACK_HOST = <span class="string">&quot;controller&quot;</span></span><br><span class="line"></span><br><span class="line"># 配置运行访问仪表盘的主机，星号表示运行所有主机访问</span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line"></span><br><span class="line"># 配置memcached会话存储服务</span><br><span class="line">SESSION_ENGINE = <span class="string">&#x27;django.contrib.sessions.backends.cache&#x27;</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">         <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;LOCATION&#x27;</span>: <span class="string">&#x27;controller:11211&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 启用身份API版本<span class="number">3</span></span><br><span class="line">OPENSTACK_KEYSTONE_URL = <span class="string">&quot;http://%s:5000/v3&quot;</span> % OPENSTACK_HOST</span><br><span class="line">TIME_ZONE = <span class="string">&quot;Asia/Shanghai&quot;</span></span><br><span class="line"></span><br><span class="line"># 上面几项修改即可，以下为新增信息</span><br><span class="line"></span><br><span class="line"># 启用对域的支持</span><br><span class="line">OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"># 配置API版本</span><br><span class="line">OPENSTACK_API_VERSIONS = &#123;</span><br><span class="line">    <span class="string">&quot;identity&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;image&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;volume&quot;</span>: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 配置默认域</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = <span class="string">&quot;Default&quot;</span></span><br><span class="line"></span><br><span class="line"># 配置默认角色</span><br><span class="line">OPENSTACK_KEYSTONE_DEFAULT_ROLE = <span class="string">&quot;user&quot;</span></span><br><span class="line"></span><br><span class="line"># 启用对第<span class="number">3</span>层网络服务的支持，若是公有网络则需要禁用，将<span class="literal">True</span>改为<span class="literal">False</span></span><br><span class="line">OPENSTACK_NEUTRON_NETWORK = &#123;</span><br><span class="line">    <span class="string">&#x27;enable_router&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_quotas&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_distributed_router&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_ha_router&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_lb&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_firewall&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_vpn&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;enable_fip_topology_check&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（2）openstack-dashboard-conf"><a href="#（2）openstack-dashboard-conf" class="headerlink" title="（2）openstack-dashboard.conf"></a>（2）openstack-dashboard.conf</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp <span class="regexp">/etc/</span>httpd<span class="regexp">/conf.d/</span>openstack-dashboard.conf&#123;,.bak&#125;</span><br><span class="line"></span><br><span class="line">echo &gt;&gt; <span class="regexp">/etc/</span>httpd<span class="regexp">/conf.d/</span>openstack-dashboard.conf &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">WSGIApplicationGroup %&#123;GLOBAL&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Apache服务、会话存储服务</span></span><br><span class="line">systemctl restart httpd.service memcached.service</span><br></pre></td></tr></table></figure>

<h3 id="（3）重建apache的dashboard配置文件"><a href="#（3）重建apache的dashboard配置文件" class="headerlink" title="（3）重建apache的dashboard配置文件"></a>（3）重建apache的dashboard配置文件</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>share/openstack-dashboard</span><br><span class="line">python3 manage.py make_web_conf --apache &gt; <span class="regexp">/etc/</span>httpd<span class="regexp">/conf.d/</span>openstack-dashboard.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立策略文件（policy.json）的软链接</span></span><br><span class="line">ln -s <span class="regexp">/etc/</span>openstack-dashboard <span class="regexp">/usr/</span>share<span class="regexp">/openstack-dashboard/</span>openstack_dashboard/conf</span><br></pre></td></tr></table></figure>

<h3 id="（4）重启Web服务器和会话存储服务"><a href="#（4）重启Web服务器和会话存储服务" class="headerlink" title="（4）重启Web服务器和会话存储服务"></a>（4）重启Web服务器和会话存储服务</h3><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line">systemctl enable httpd.<span class="keyword">service</span> memcached.<span class="keyword">service</span></span><br><span class="line">systemctl restart httpd.<span class="keyword">service</span> memcached.<span class="keyword">service</span></span><br></pre></td></tr></table></figure>

<h3 id="（5）访问Dashboard"><a href="#（5）访问Dashboard" class="headerlink" title="（5）访问Dashboard"></a>（5）访问Dashboard</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">访问：http:<span class="string">//10.0.0.11</span></span><br><span class="line">在Dashboard中可以分别创建不同网络选项的实例来验证安装。</span><br><span class="line"></span><br><span class="line">附：快速创建实例类型</span><br><span class="line">openstack flavor create <span class="params">--id</span> 0 <span class="params">--vcpus</span> 1 <span class="params">--ram</span> 256 <span class="params">--disk</span> 0 1U256M0G</span><br><span class="line">openstack flavor create <span class="params">--id</span> 2 <span class="params">--vcpus</span> 1 <span class="params">--ram</span> 1024 <span class="params">--disk</span> 0 1U1G0G</span><br><span class="line">openstack flavor create <span class="params">--id</span> 3 <span class="params">--vcpus</span> 1 <span class="params">--ram</span> 2048 <span class="params">--disk</span> 0 1U2G0G</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>运维笔记</category>
      </categories>
      <tags>
        <tag>Openstack</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7 firewalld 的相关配置</title>
    <url>/2021/05/25/CentOS7%20firewalld%20%E7%9A%84%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>CentOS 7 firewalld 的相关配置<br><img src="https://cdn.jsdelivr.net/gh/zl19940501/image_repository/blog_img01/%E6%A9%99%E5%AD%90%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E5%A3%81%E7%BA%B8%20-%204.jpg"></p>
<span id="more"></span>

<p>说明：在RHEL7系列中，默认使用firewalld作为防火墙，iptables默认是关闭的（stop），</p>
<p>要使用firewalld建议先关闭并禁用老版本的iptables，ip6tables和ebtables。</p>
<figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">systemctl <span class="keyword">stop</span> &#123;<span class="literal">ip</span>,eb,ip6&#125;<span class="keyword">tables</span>    #一般默认在RHEL7中是没有开启的</span><br><span class="line">systemctl <span class="keyword">mask</span> &#123;<span class="literal">ip</span>,eb,ip6&#125;<span class="keyword">tables</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">systemctl</span> <span class="keyword">start</span> <span class="keyword">firewalld</span></span><br><span class="line"><span class="keyword">systemctl</span> <span class="keyword">enable</span> <span class="keyword">firewalld</span></span><br><span class="line"><span class="keyword">systemctl</span> <span class="keyword">status</span> <span class="keyword">firewalld</span></span><br><span class="line">可以看到firewalld启动了</span><br></pre></td></tr></table></figure>

<h2 id="1-区域zone概念"><a href="#1-区域zone概念" class="headerlink" title="1. 区域zone概念"></a>1. 区域zone概念</h2><p>　　在firewalld中引入了区域的概念，简单来说，区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。</p>
<p><strong>有如下几种不同的初始化区域：</strong></p>
<ul>
<li>阻塞区域（block）：任何传入的网络数据包都将被阻止。</li>
<li>工作区域（work）：相信网络上的其他计算机，不会损害你的计算机。</li>
<li>家庭区域（home）：相信网络上的其他计算机，不会损害你的计算机。</li>
<li>公共区域（public）：不相信网络上的任何计算机，只有选择接受传入的网络连接。</li>
<li>隔离区域（DMZ）：隔离区域也称为非军事区域，内外网络之间增加的一层网络，起到缓冲作用。对于隔离区域，只有选择接受传入的网络连接。</li>
<li>信任区域（trusted）：所有的网络连接都可以接受。</li>
<li>丢弃区域（drop）：任何传入的网络连接都被拒绝。</li>
<li>内部区域（internal）：信任网络上的其他计算机，不会损害你的计算机。只有选择接受传入的网络连接。</li>
<li>外部区域（external）：不相信网络上的其他计算机，不会损害你的计算机。只有选择接受传入的网络连接。</li>
</ul>
<p>注：FirewallD的默认区域是public。</p>
<h2 id="2-firewalld-服务基本使用"><a href="#2-firewalld-服务基本使用" class="headerlink" title="2. firewalld 服务基本使用"></a>2. firewalld 服务基本使用</h2><p>firewall 与 iptables 一样都是服务，所以可以使用 systemctl 服务管理工具来操作</p>
<p>查看防火墙状态： <code>systemctl status firewalld</code></p>
<p>关闭防火墙，停止 firewall 服务： <code>systemctl stop firewalld</code></p>
<p>开启防火墙，启动 firewall 服务： <code>systemctl start firewalld</code></p>
<p>重启防火墙，重启 firewall 服务： <code>systemctl restart firewalld</code></p>
<p>查看 firewall 服务是否开机启动： <code>systemctl is-enabled firewalld</code></p>
<p>开机时自动启动 firewall 服务： <code>systemctl enable firewalld.service</code></p>
<p>开机时自动禁用 firewall 服务： <code>systemctl disable firewalld.service</code></p>
<p>只有firewalld服务启动了，才能使用firewalld-cmd命令。</p>
<p>firewalld有规则两种状态：</p>
<p>运行时（runtime)：修改规则马上生效, 但是临时生效</p>
<p>持久配置（permanent）： 修改后需要重载才会生效</p>
<p>如果规则中没有加入参数：—permanent都是即时生效的，而且reload或者重启服务后都不会再有记录。<br>而加入了参数：—permanent后需要手动reload或者重启服务才生效。 同时可以加入—zone 应用于于哪个区域的参数。</p>
<p>配置文件</p>
<p>/etc/firewalld/{services, zones}/*.xml  优先级最高，permanent模式生效的策略会放到这里</p>
<p>/lib/firewalld/{services, zones}/*.xml  优先级要低些，是一些默认配置，可以当做模板使用</p>
<h2 id="3-firewalld-cmd-命令使用"><a href="#3-firewalld-cmd-命令使用" class="headerlink" title="3. firewalld-cmd 命令使用"></a>3. firewalld-cmd 命令使用</h2><h3 id="3-1-端口放行策略配置"><a href="#3-1-端口放行策略配置" class="headerlink" title="3.1 端口放行策略配置"></a>3.1 端口放行策略配置</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开放单个端口</span></span><br><span class="line">$ firewall-cmd <span class="params">--zone=public</span> <span class="params">--add-port=80/tcp</span> <span class="params">--permanent</span>                     </span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放端口范围</span></span><br><span class="line">$ firewall-cmd <span class="params">--zone=public</span> <span class="params">--add-port=8388-8389/tcp</span> <span class="params">--permanent</span>        </span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 147.152.139.197 开放10000端口</span></span><br><span class="line">$ firewall-cmd <span class="params">--permanent</span> <span class="params">--zone=public</span> <span class="params">--add-rich-rule=</span>&#x27;</span><br><span class="line">        rule family=<span class="string">&quot;ipv4&quot;</span></span><br><span class="line">        source address=<span class="string">&quot;147.152.139.197/32&quot;</span></span><br><span class="line">        port protocol=<span class="string">&quot;tcp&quot;</span> port=<span class="string">&quot;10000&quot;</span> accept&#x27;       </span><br><span class="line">        </span><br><span class="line"><span class="comment"># 拒绝端口：</span></span><br><span class="line">$ firewall-cmd <span class="params">--permanent</span> <span class="params">--zone=public</span> <span class="params">--add-rich-rule=</span>&#x27;</span><br><span class="line">              rule family=<span class="string">&quot;ipv4&quot;</span></span><br><span class="line">              source address=<span class="string">&quot;47.52.39.197/32&quot;</span></span><br><span class="line">              port protocol=<span class="string">&quot;tcp&quot;</span> port=<span class="string">&quot;10000&quot;</span> reject&#x27;  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放全部端口给IP</span></span><br><span class="line">$ firewall-cmd <span class="params">--permanent</span> <span class="params">--zone=public</span> <span class="params">--add-rich-rule=</span>&#x27;</span><br><span class="line">              rule family=<span class="string">&quot;ipv4&quot;</span></span><br><span class="line">              source address=<span class="string">&quot;192.168.0.1/32&quot;</span> accept&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放全部端口给网段</span></span><br><span class="line">$ firewall-cmd <span class="params">--permanent</span> <span class="params">--zone=public</span> <span class="params">--add-rich-rule=</span>&#x27;</span><br><span class="line">              rule family=<span class="string">&quot;ipv4&quot;</span></span><br><span class="line">              source address=<span class="string">&quot;192.168.0.0/16&quot;</span> accept&#x27;;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-firewalld的NAT和端口转发"><a href="#3-2-firewalld的NAT和端口转发" class="headerlink" title="3.2 firewalld的NAT和端口转发"></a>3.2 firewalld的NAT和端口转发</h3><p>1）网络地址转换（NAT）</p>
<p>　　firewalld支持两种类型的网络地址转换(NAT) 伪装和端口转发。可以在基本级别使用常规</p>
<p>　　frewall-cmd规则来同时配置这两者，更高级的转发配置可以使用富规则来完成。</p>
<p>　　这两种形式的NAT会在发送包之前修改包的某些方面如源或目标。<br>2）伪装（注意：伪装只能和ipv4一起用，ipv6不行）</p>
<p>　　通过伪装系统会将并非直接寻址到自身的包转发到指定接收方同时将通过的包的源地址更改为其自己的公共TP地址。</p>
<p>防火墙对这些传入的包应答时会将目标地址修改为原始主机的地址并发送包。这通常在网络边缘上使用以便为内部网络提供Internet访问。</p>
<p>伪装是一种形式的网络地址转换（NAT）</p>
<p>3）配置伪装</p>
<p>要使用常规的firewall-cmd命令为区域配置伪装，使用下列语法：</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">firewall</span><span class="literal">-</span><span class="comment">cmd</span> --<span class="comment">permanent</span> --<span class="comment">zone=</span>&lt;<span class="comment">ZONE</span>&gt; --<span class="comment">add</span><span class="literal">-</span><span class="comment">masquerade</span></span><br></pre></td></tr></table></figure>

<p>这将伪装满足以下条件的任何包从该区域的源（接口及子网）中定义的客户端发送到防火墙且未寻址到防火墙自身的包，即该区域源的数据包的目标IP不是防火墙自身的IP，都将映射成防火墙的IP。</p>
<p>要在更大程度上控制要进行伪装的客户端, 还可以使用富规则。</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attr">--zone=&lt;ZONE&gt;</span> <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=192.168.0.0/24</span> masquerade&#x27; </span><br></pre></td></tr></table></figure>

<p>4）端口转发</p>
<p>另一种形式的NAT是端口转发。</p>
<p>通过端口转发指向单个端口的流量将转发到相同计算机上的不同端口或者转发到不同计算机上的端口。</p>
<p>此机制通常用于将某个服务器隐藏在另一个计算机后面，或者用于在备用端口上提供对服务的访问权限。</p>
<p>重要：</p>
<p>　　当端口转发配置为将包转发到不同计算机时，从该计算机的任何回复通常将直接从该计算机发送到原始客户端。</p>
<p>这将在大部分配置上导致无效连接，因此转发到的计算机必须通过执行端口转发的防火墙来进行伪装。</p>
<p>常见配置是将端口从防火墙计算机转发到已在防火墙后面伪装的计算机，即这种通过目标端口转发的方式需要开启伪装（masquerade）</p>
<p>要使用常规fircwall-cmd命令配置端口转发，可以使用firewalld提供的端口转发语法：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=&lt;ZONE&gt; --add-forward-port=port=&lt;PORTNUMBER&gt;<span class="symbol">:proto=&lt;PROTOCOL&gt;</span>[<span class="symbol">:toport=&lt;PORTNUMBER&gt;</span>][<span class="symbol">:toaddr=&lt;IPADDR&gt;</span>]</span><br></pre></td></tr></table></figure>

<p>toport=和toaddr 两部分均可选，但需要至少指定这两者之一 。</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">例如， 对于来自public区域的客户端，以下命令会将防火墙上通过端口<span class="number">513</span>/TCP传入的连接转发到IP地址为<span class="number">192.168</span>.0.<span class="number">254</span>的计算机上的端口<span class="number">132</span>/TCP</span><br><span class="line"></span><br><span class="line">frewall-cmd --permanent --zone=public --add-forward­port=port=<span class="number">513</span><span class="symbol">:proto=tcp</span><span class="symbol">:toport=</span><span class="number">132</span><span class="symbol">:toaddr=</span><span class="number">192.168</span>.0.<span class="number">254</span></span><br></pre></td></tr></table></figure>

<p>要在更大程度上控制端口转发规则，可以将以下语法与富规则配合使用来实现端口转发，这也是我们推荐使用的方式</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">forward-port <span class="attribute">port</span>=&lt;PORTNUM&gt; <span class="attribute">protocol</span>=tcp|udp [<span class="attribute">to-port</span>=&lt;PORTNUM&gt;] [<span class="attribute">to-addr</span>=&lt;ADDRESS&gt;]</span><br></pre></td></tr></table></figure>

<p>以下示例使用富规则将来自work区域中192.168.0.0/4且传入到端口80/TCP的流星转发到防火墙计算机自身上面的和端口8080/TCP:</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attr">--zone=work</span> <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=l92.168.0.0/24</span> forward-port <span class="attr">port=80</span> <span class="attr">protocol=tcp</span> <span class="attr">to-port=8080&#x27;</span> </span><br></pre></td></tr></table></figure>

<p>其实这里是指传统的目标地址映射，实现外网访问内网资源</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attr">--zone=external</span> --add-masquerade</span><br><span class="line">firewall-cmd --permanent <span class="attr">--zone=public</span> <span class="attr">--add-forward-port=port=513:proto=tcp:toport=132:toaddr=192.168.0.254</span></span><br><span class="line">firewall-cmd --permanent <span class="attr">--zone=public</span> <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=192.168.0.0/24</span> forward-port <span class="attr">port=80</span> <span class="attr">protocol=tcp</span> <span class="attr">to-port=8080&#x27;</span></span><br></pre></td></tr></table></figure>

<p>例子：</p>
<p>把来自172.25.0.10/32并且访问的端口为tcp的443端口的数据包进行端口转发，转发到本机的tcp的22端口</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=172.25.0.10/32</span> forward-port <span class="attr">port=443</span> <span class="attr">protocol=tcp</span> <span class="attr">to-port=22&#x27;</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>本地端口转发：</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=172.25.0.10/32</span> forward-port <span class="attr">port=80</span> <span class="attr">to-port=22</span> <span class="attr">protocol=tcp&#x27;</span></span><br></pre></td></tr></table></figure>

<p> 目标地址转发：</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=172.25.0.10/32</span> forward-port <span class="attr">port=80</span> <span class="attr">to-port=80</span> <span class="attr">protocol=tcp</span> <span class="attr">to-addr=172.25.0.254&#x27;</span></span><br></pre></td></tr></table></figure>

<p> 一键断网</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="comment">--panic-off</span></span><br><span class="line"></span><br><span class="line">firewall-cmd <span class="comment">--panic-on</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3-使用富规则进行日志记录"><a href="#3-3-使用富规则进行日志记录" class="headerlink" title="3.3 使用富规则进行日志记录"></a>3.3 使用富规则进行日志记录</h3><p>调试或监控防火墙时，记录巳接受或巳拒绝的连接很有用。</p>
<p>firewalld可以通过两种方法来实现此目的记录到syslog, 或者将消息发送到由auditd管理的内核audit子系统。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">使用富规则记录到syslog的基本语法为：</span><br><span class="line"></span><br><span class="line"><span class="keyword">log</span> [prefix=&quot;&lt;PREFIX TEXT&gt;&quot; [<span class="keyword">level</span>=&lt;LOGLEVEL&gt;] [<span class="keyword">limit</span> <span class="keyword">value</span>=&quot;&lt;RATE/DURATION&gt;&quot;]</span><br><span class="line"></span><br><span class="line">其中：</span><br><span class="line"></span><br><span class="line">&lt;LOGLEVEL&gt; 可以是emerg 、 alert 、 crit 、 error 、 <span class="built_in">warning</span> 、 <span class="keyword">notice</span> 、 <span class="keyword">info</span>或<span class="keyword">debug</span>之一。</span><br><span class="line"></span><br><span class="line">&lt;RATE/DURATION&gt;&quot; 可以是s(表示秒）、m(表示分钟）、h(表示小时）或d(表示天）之一。</span><br><span class="line"></span><br><span class="line">例如：limit value=3/m会将日志消息限制为每分钟最多三条。</span><br><span class="line"></span><br><span class="line">limit value = 3/m 这里是有BUG 的，常常时间控制会不精准。</span><br><span class="line"></span><br><span class="line">针对ssh 链接记录至日志中，每分钟3次</span><br><span class="line">firewall-cmd --permanent --zone=work --add-rich-rule=&#x27;rule service name=ssh log prefix=&quot;ssh &quot; level=notice limit value=&quot;<span class="number">3</span>/m&quot; accept&#x27;</span><br><span class="line"></span><br><span class="line">添加富规则，只允许172.25.0.10/32访问，并且记录日志，日志级别为notice,日志前缀为&quot;<span class="built_in">NEW</span> HTTP &quot;,限制每秒最多3个并发 ，要求持久化生效</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=ipv4 source address=172.25.0.10/32 service name=http log level=notice prefix=&quot;<span class="built_in">NEW</span> HTTP &quot; limit value=&quot;<span class="number">3</span>/s&quot; accept&#x27; </span><br><span class="line"></span><br><span class="line">接受从work区域到SSH的新连接， 以notice级别且每分钟最多三条消息的方式将新连接记录 到syslog。</span><br><span class="line">firewall-cmd --permanent --zone=work --add-rich-rule=&#x27;rule service name=&quot;ssh&quot; log prefix=&quot;ssh&quot; level=&quot;<span class="keyword">notice</span>&quot; limit va1ue=&quot;<span class="number">3</span>/m&quot; accept</span><br><span class="line"></span><br><span class="line">用于记录到审计子系统的基本语法为：</span><br><span class="line">audit [limit value=&quot;&lt;RATE/DURATION&gt;&quot;]</span><br><span class="line">速率限制的配置方式与syslog记录相同。</span><br><span class="line"></span><br><span class="line">使用富规则进行记录的某些示例：</span><br><span class="line">用于调试，规则在300秒后失效，将拒绝从默认区域中子网2001: db8: : /64到DNS的新IPv6连接，</span><br><span class="line">并且拒绝的连接将记录到audit系统，且每小时最多一条消息。</span><br><span class="line">firewall-crud --add-rich-rule=&#x27;rule family=ipv6 source address=&quot;<span class="number">2001</span> :db8: :/<span class="number">64</span>&quot; service name=&quot; dns&quot; audit limit va1ue=&quot; <span class="number">1</span>/h&quot; reject&#x27;--timeout=300</span><br></pre></td></tr></table></figure>

<h2 id="4-firewalld的一些实用操作"><a href="#4-firewalld的一些实用操作" class="headerlink" title="4. firewalld的一些实用操作"></a>4. firewalld的一些实用操作</h2><p>规则重载</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="params">--reload</span></span><br><span class="line"></span><br><span class="line">firewall-cmd <span class="params">--complete-reload</span></span><br><span class="line"></span><br><span class="line">两者都会重新会加载内核中的防火墙模块和配置文件，但是firewall-cmd <span class="params">--complete-reload</span>不会维持当前连接信息。比如，用ssh22登陆，如果不小心把ssh 22关掉了，用<span class="keyword">reload</span>不会把当前的连接杀死。但是用 <span class="params">--complete-reload</span>，那么恭喜，成功的把自己关在外面了</span><br></pre></td></tr></table></figure>

<p>应急命令（一键断网）</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --panic-on           <span class="comment">#拒绝所有流量，远程连接会立即断开，只有本地能登陆</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --panic-off          <span class="comment">#取消应急模式，但需要重启firewalld后才可以远程ssh</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --query-panic        <span class="comment">#查看是否为应急模式</span></span></span><br></pre></td></tr></table></figure>

<p>添加服务和端口以及协议</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-service=&lt;service name&gt; 　　　　　　<span class="comment">#添加服务</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --remove-service=&lt;service name&gt; 　　　　<span class="comment">#移除服务</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-port=&lt;port&gt;/&lt;protocol&gt;           <span class="comment">#添加端口/协议（TCP/UDP）</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --remove-port=&lt;port&gt;/&lt;protocol&gt;  　　   <span class="comment">#移除端口/协议（TCP/UDP）</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --list-ports 　　　　　　　　　　　　　　　　<span class="comment">#查看开放的端口</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --add-protocol=&lt;protocol&gt;      　　　　  <span class="comment">#允许协议 (例：icmp，即允许ping)</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --remove-protocol=&lt;protocol&gt; 　　　　　　 <span class="comment">#取消协议</span></span></span><br><span class="line"></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --list-protocols                        <span class="comment">#查看允许的协议</span></span></span><br></pre></td></tr></table></figure>

<p>指定某IP或网段的流量通过</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">firewall</span>-cmd --add-rich-rule=<span class="string">&quot;rule family=&quot;</span>ipv<span class="number">4</span><span class="string">&quot; source address=&quot;</span>&lt;ip/netmask&gt;<span class="string">&quot; accept&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#允许来自192.168.2.1的所有流量</span></span><br><span class="line"><span class="attribute">firewall</span>-cmd --add-rich-rule=<span class="string">&quot;rule family=&quot;</span>ipv<span class="number">4</span><span class="string">&quot; source address=&quot;</span><span class="number">192.168.2.1</span><span class="string">&quot; accept&quot;</span> </span><br></pre></td></tr></table></figure>

<p>指定IP时指定协议</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--add-rich-rule</span>=<span class="string">&quot;rule family=&quot;</span>ipv4&quot; source <span class="attribute">address</span>=<span class="string">&quot;&lt;ip&gt;&quot;</span> protocol <span class="attribute">value</span>=<span class="string">&quot;&lt;protocol&gt;&quot;</span> accept<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#允许192.168.2.208主机的icmp协议，即允许192.168.2.208主机ping</span></span><br><span class="line"><span class="string">firewall-cmd --add-rich-rule=&quot;</span>rule <span class="attribute">family</span>=<span class="string">&quot;ipv4&quot;</span> source <span class="attribute">address</span>=<span class="string">&quot;192.168.2.208&quot;</span> protocol <span class="attribute">value</span>=<span class="string">&quot;icmp&quot;</span> accept<span class="string">&quot; 　　</span></span><br></pre></td></tr></table></figure>

<p>允许指定ip访问指定服务</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--add-rich-rule</span>=<span class="string">&quot;rule family=&quot;</span>ipv4&quot; source <span class="attribute">address</span>=<span class="string">&quot;&lt;ip&gt;&quot;</span><span class="built_in"> service </span><span class="attribute">name</span>=<span class="string">&quot;&lt;service name&gt;&quot;</span> accept<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#允许192.168.2.208主机访问ssh服务</span></span><br><span class="line"><span class="string">firewall-cmd --add-rich-rule=&quot;</span>rule <span class="attribute">family</span>=<span class="string">&quot;ipv4&quot;</span> source <span class="attribute">address</span>=<span class="string">&quot;192.168.2.208&quot;</span><span class="built_in"> service </span><span class="attribute">name</span>=<span class="string">&quot;ssh&quot;</span> accept<span class="string">&quot;</span></span><br><span class="line"><span class="string">　　　　 </span></span><br></pre></td></tr></table></figure>

<p>允许指定ip访问指定端口</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--add-rich-rule</span>=<span class="string">&quot;rule family=&quot;</span>ipv4&quot; source <span class="attribute">address</span>=<span class="string">&quot;&lt;ip&gt;&quot;</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">&quot;&lt;port protocol&gt;&quot;</span> <span class="attribute">port</span>=<span class="string">&quot;&lt;port&gt;&quot;</span> accept<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#允许192.168.2.1主机访问22端口</span></span><br><span class="line"><span class="string">firewall-cmd --add-rich-rule=&quot;</span>rule <span class="attribute">family</span>=<span class="string">&quot;ipv4&quot;</span> source <span class="attribute">address</span>=<span class="string">&quot;192.168.2.1&quot;</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">&quot;tcp&quot;</span> <span class="attribute">port</span>=<span class="string">&quot;22&quot;</span> accept<span class="string">&quot;　</span></span><br></pre></td></tr></table></figure>

<p>禁止IP和网段</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#禁止192.168.2.0/24网段的主机访问22端口</span></span><br><span class="line">firewall-cmd <span class="attribute">--zone</span>=drop <span class="attribute">--add-rich-rule</span>=<span class="string">&quot;rule family=&quot;</span>ipv4&quot; source <span class="attribute">address</span>=<span class="string">&quot;192.168.2.0/24&quot;</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">&quot;tcp&quot;</span> <span class="attribute">port</span>=<span class="string">&quot;22&quot;</span> reject<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<p> 本地端口转发：</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=172.25.0.10/32</span> forward-port <span class="attr">port=80</span> <span class="attr">to-port=22</span> <span class="attr">protocol=tcp</span> accept&#x27;</span><br></pre></td></tr></table></figure>

<p>目标地址转发：</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-masquerade</span><br><span class="line">firewall-cmd <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=172.25.0.10/32</span> forward-port <span class="attr">port=80</span> <span class="attr">to-port=80</span> <span class="attr">protocol=tcp</span> <span class="attr">to-addr=172.25.0.254</span> accept&#x27;</span><br></pre></td></tr></table></figure>

<p>要使用常规的firewall-cmd命令为区域配置伪装，使用下列语法：</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">firewall</span><span class="literal">-</span><span class="comment">cmd</span> --<span class="comment">permanent</span> --<span class="comment">zone=</span>&lt;<span class="comment">ZONE</span>&gt; --<span class="comment">add</span><span class="literal">-</span><span class="comment">masquerade</span></span><br></pre></td></tr></table></figure>

<p>这将伪装满足以下条件的任何包从该区域的源（接口及子网）中定义的客户端发送到防火墙且未寻址到防火墙自身的包，即该区域源的数据包的目标IP不是防火墙自身的IP，都将映射成防火墙的IP。</p>
<p>要在更大程度上控制要进行伪装的客户端, 还可以使用富规则。</p>
<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attr">--zone=&lt;ZONE&gt;</span> <span class="attr">--add-rich-rule=&#x27;rule</span> <span class="attr">family=ipv4</span> source <span class="attr">address=192.168.0.0/24</span> masquerade&#x27;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>运维笔记</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>systemctl mask和systemctl disable的区别</title>
    <url>/2021/05/24/systemctl-mask%E5%92%8Csystemctl-disable%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p>systemctl mask和systemctl disable的区别一般很难注意到，因为大部分时候只会使用systemctl disable，并不会用到systemctl mask。<br>总体来看，<br>disable和enable是一对操作，是用来启动、停止服务。<br>mask和unmask是一对操作，用来屏蔽和取消屏蔽服务。<br><img src="https://cdn.jsdelivr.net/gh/zl19940501/image_repository/blog_img01/%E6%A9%99%E5%AD%90%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87%E5%A3%81%E7%BA%B8%20-%206.jpg"></p>
<span id="more"></span>
<h2 id="systemctl-disable"><a href="#systemctl-disable" class="headerlink" title="systemctl disable"></a>systemctl disable</h2><p>在系统中安装了某个服务以后，需要将该服务设置为开机自启，那么一般会执行systemctl enable xxx，这个时候会发现shell中会输出两行提示，一般类似如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl enable NetworkManager </span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>multi<span class="operator">-</span>user.target.wants<span class="operator">/</span>NetworkManager.service <span class="keyword">to</span> <span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager.service.</span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>dbus<span class="operator">-</span>org.freedesktop.nm<span class="operator">-</span>dispatcher.service <span class="keyword">to</span> <span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager<span class="operator">-</span>dispatcher.service.</span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>network<span class="operator">-</span>online.target.wants<span class="operator">/</span>NetworkManager<span class="operator">-</span>wait<span class="operator">-</span>online.service <span class="keyword">to</span> <span class="operator">/</span>usr<span class="operator">/</span>lib<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager<span class="operator">-</span>wait<span class="operator">-</span>online.service.</span><br></pre></td></tr></table></figure>

<p>这个命令会在/etc/systemd/system/目录下创建需要的符号链接，表示服务需要进行启动。通过stdout输出的信息可以看到，软连接实际指向的文件为/usr/lib/systemd/system/目录中的文件，实际起作用的也是这个目录中的文件。</p>
<p>执行systemctl disable xxx后，会禁用这个服务。它实现的方法是将服务对应的软连接从/etc/systemd/system中删除。命令执行情况一般类似如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl disable NetworkManager</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>multi<span class="operator">-</span>user.target.wants<span class="operator">/</span>NetworkManager.service.</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>dbus<span class="operator">-</span>org.freedesktop.NetworkManager.service.</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>dbus<span class="operator">-</span>org.freedesktop.nm<span class="operator">-</span>dispatcher.service.</span><br><span class="line">Removed symlink <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>network<span class="operator">-</span>online.target.wants<span class="operator">/</span>NetworkManager<span class="operator">-</span>wait<span class="operator">-</span>online.service.</span><br></pre></td></tr></table></figure>

<p>在执行systemctl disable xxx的时候，实际只是删除了软连接，并不会产生其他影响。</p>
<h2 id="systemctl-mask"><a href="#systemctl-mask" class="headerlink" title="systemctl mask"></a>systemctl mask</h2><p>执行 systemctl mask xxx会屏蔽这个服务。它和systemctl disable xxx的区别在于，前者只是删除了符号链接，后者会建立一个指向/dev/null的符号链接，这样，即使有其他服务要启动被mask的服务，仍然无法执行成功。执行该命令的效果一般类似如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl mask NetworkManager </span><br><span class="line">Created symlink <span class="keyword">from</span> <span class="operator">/</span>etc<span class="operator">/</span>systemd<span class="operator">/</span><span class="keyword">system</span><span class="operator">/</span>NetworkManager.service <span class="keyword">to</span> <span class="operator">/</span>dev<span class="operator">/</span>null.</span><br></pre></td></tr></table></figure>



<h2 id="两者的区别"><a href="#两者的区别" class="headerlink" title="两者的区别"></a>两者的区别</h2><p>在执行过mask后，如果想要启动服务，那么会报类似如下错误：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@NameNode01</span> <span class="keyword">system</span>]# systemctl <span class="keyword">start</span> NetworkManager</span><br><span class="line">Failed <span class="keyword">to</span> <span class="keyword">start</span> NetworkManager.service: Unit <span class="keyword">is</span> masked.</span><br></pre></td></tr></table></figure>

<p>此时要想重新启动服务，必须先执行unmask将服务取消屏蔽。如果前面使用的是disable的话，则可以正常启动服务。</p>
<p>总体来看，</p>
<p>disable和enable是一对操作，是用来启动、停止服务。<br>mask和unmask是一对操作，用来屏蔽和取消屏蔽服务。</p>
]]></content>
      <categories>
        <category>运维笔记</category>
      </categories>
      <tags>
        <tag>CentOS</tag>
      </tags>
  </entry>
</search>
